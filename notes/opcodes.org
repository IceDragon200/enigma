* Opcodes [54/138]
- [X] Label = 1
- [ ] FuncInfo = 2
- [X] IntCodeEnd = 3
- [X] Call = 4
- [X] CallLast = 5
- [X] CallOnly = 6
- [X] CallExt = 7
- [X] CallExtLast = 8
- [X] Bif0 = 9
- [ ] Bif1 = 10
- [ ] Bif2 = 11
- [X] Allocate = 12
- [X] AllocateHeap = 13
- [X] AllocateZero = 14
- [ ] AllocateHeapZero = 15
- [ ] TestHeap = 16
- [ ] Init = 17
- [X] Deallocate = 18
- [X] Return = 19
- [ ] Send = 20
- [X] RemoveMessage = 21
- [ ] Timeout = 22
- [X] LoopRec = 23
- [X] LoopRecEnd = 24
- [X] Wait = 25
- [ ] WaitTimeout = 26
- [X] IsLt = 39
- [ ] IsGe = 40
- [X] IsEq = 41
- [X] IsNe = 42
- [ ] IsEqExact = 43
- [ ] IsNeExact = 44
- [X] IsInteger = 45
- [X] IsFloat = 46
- [X] IsNumber = 47
- [X] IsAtom = 48
- [X] IsPid = 49
- [X] IsReference = 50
- [X] IsPort = 51
- [X] IsNil = 52
- [X] IsBinary = 53
- [X] IsList = 55
- [X] IsNonemptyList = 56
- [X] IsTuple = 57
- [X] TestArity = 58
- [X] SelectVal = 59
- [ ] SelectTupleArity = 60
- [X] Jump = 61
- [ ] Catch = 62
- [ ] CatchEnd = 63
- [X] Move = 64
- [X] GetList = 65
- [X] GetTupleElement = 66
- [ ] SetTupleElement = 67
- [X] PutList = 69
- [ ] PutTuple = 70
- [ ] Put = 71
- [ ] Badmatch = 72
- [ ] IfEnd = 73
- [ ] CaseEnd = 74
- [X] CallFun = 75
- [X] IsFunction = 77
- [X] CallExtOnly = 78
- [ ] BsPutInteger = 89
- [ ] BsPutBinary = 90
- [ ] BsPutFloat = 91
- [X] BsPutString = 92
- [ ] Fclearerror = 94 Clears the error flag
- [ ] Fcheckerror = 95 Checks if the FR0 contains Nan or +-Inf. Raises badarith exception if this is the case.
- [ ] Fmove = 96 copy from src to dest
- [ ] Fconv = 97 convert arg to float and place in dest
- [ ] Fadd = 98 arg[2] = arg[0] + arg[1]
- [ ] Fsub = 99  arg[2] = arg[0] - arg[1]
- [ ] Fmul = 100 arg[2] = arg[0] * arg[1]
- [ ] Fdiv = 101 arg[2] = arg[0] / arg[1]
- [ ] Fnegate = 102 arg[1] = -arg[0]
- [X] MakeFun2 = 103
- [ ] Try = 104
- [ ] TryEnd = 105
- [ ] TryCase = 106
- [ ] TryCaseEnd = 107
- [ ] Raise = 108
- [X] BsInit2 = 109
- [X] BsAdd = 111
- [ ] Apply = 112
- [ ] ApplyLast = 113
- [X] IsBoolean = 114
- [X] IsFunction2 = 115
- [ ] BsStartMatch2 = 116
- [ ] BsGetInteger2 = 117
- [ ] BsGetFloat2 = 118
- [ ] BsGetBinary2 = 119
- [ ] BsSkipBits2 = 120
- [ ] BsTestTail2 = 121
- [ ] BsSave2 = 122
- [ ] BsRestore2 = 123
- [X] GcBif1 = 124
- [X] GcBif2 = 125
- [ ] IsBitstr = 129
- [ ] BsContextToBinary = 130
- [ ] BsTestUnit = 131
- [ ] BsMatchString = 132
- [ ] BsInitWritable = 133
- [ ] BsAppend = 134
- [ ] BsPrivateAppend = 135
- [X] Trim = 136
- [ ] BsInitBits = 137
- [ ] BsGetUtf8 = 138
- [ ] BsSkipUtf8 = 139
- [ ] BsGetUtf16 = 140
- [ ] BsSkipUtf16 = 141
- [ ] BsGetUtf32 = 142
- [ ] BsSkipUtf32 = 143
- [ ] BsUtf8Size = 144
- [ ] BsPutUtf8 = 145
- [ ] BsUtf16Size = 146
- [ ] BsPutUtf16 = 147
- [ ] BsPutUtf32 = 148
- [ ] OnLoad = 149
- [ ] RecvMark = 150
- [ ] RecvSet = 151
- [X] GcBif3 = 152
- [ ] Line = 153
- [ ] PutMapAssoc = 154
- [ ] PutMapExact = 155
- [ ] IsMap = 156
- [ ] HasMapFields = 157
- [ ] GetMapElements = 158
- [ ] IsTaggedTuple = 159
- [ ] BuildStacktrace = 160
- [ ] RawRaise = 161
- [X] GetHd = 162
- [X] GetTl = 163
- [ ] PutTuple2 = 164
- [ ] BsGetTail = 165
- [ ] BsStartMatch3 = 166
- [ ] BsGetPosition = 167
- [ ] BsSetPosition = 168
