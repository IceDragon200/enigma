{module, init}.  %% version = 0

{exports, [{archive_extension,0},
           {boot,1},
           {code_path_choice,0},
           {ensure_loaded,1},
           {fetch_loaded,0},
           {get_argument,1},
           {get_arguments,0},
           {get_plain_arguments,0},
           {get_status,0},
           {make_permanent,2},
           {module_info,0},
           {module_info,1},
           {notify_when_started,1},
           {objfile_extension,0},
           {reboot,0},
           {restart,0},
           {run_on_load_handlers,0},
           {script_id,0},
           {stop,0},
           {stop,1},
           {wait_until_started,0}]}.

{attributes, []}.

{labels, 691}.


{function, debug, 2, 2}.
  {label,1}.
    {line,[{location,"init.erl",94}]}.
    {func_info,{atom,init},{atom,debug},2}.
  {label,2}.
    {test,is_eq_exact,{f,3},[{x,0},{atom,false}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,3}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",95}]}.
    {call_ext_only,1,{extfunc,erlang,display,1}}.


{function, get_arguments, 0, 5}.
  {label,4}.
    {line,[{location,"init.erl",99}]}.
    {func_info,{atom,init},{atom,get_arguments},0}.
  {label,5}.
    {move,{atom,get_arguments},{x,0}}.
    {call_only,1,{f,34}}.


{function, get_plain_arguments, 0, 7}.
  {label,6}.
    {line,[{location,"init.erl",104}]}.
    {func_info,{atom,init},{atom,get_plain_arguments},0}.
  {label,7}.
    {allocate,0,0}.
    {move,{atom,get_plain_arguments},{x,0}}.
    {line,[{location,"init.erl",105}]}.
    {call,1,{f,34}}.
    {call_last,1,{f,16},0}.


{function, get_argument, 1, 9}.
  {label,8}.
    {line,[{location,"init.erl",110}]}.
    {func_info,{atom,init},{atom,get_argument},1}.
  {label,9}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,get_argument}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {call_only,1,{f,34}}.


{function, script_id, 0, 11}.
  {label,10}.
    {line,[{location,"init.erl",115}]}.
    {func_info,{atom,init},{atom,script_id},0}.
  {label,11}.
    {move,{atom,script_id},{x,0}}.
    {call_only,1,{f,34}}.


{function, bs2as, 1, 13}.
  {label,12}.
    {line,[{location,"init.erl",118}]}.
    {func_info,{atom,init},{atom,bs2as},1}.
  {label,13}.
    {test,is_list,{f,14},[{x,0}]}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {make_fun2,{f,690},0,0,0}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,78},1}.
  {label,14}.
    return.


{function, bs2ss, 1, 16}.
  {label,15}.
    {line,[{location,"init.erl",123}]}.
    {func_info,{atom,init},{atom,bs2ss},1}.
  {label,16}.
    {test,is_list,{f,17},[{x,0}]}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {make_fun2,{f,688},0,0,0}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,78},1}.
  {label,17}.
    return.


{function, get_status, 0, 19}.
  {label,18}.
    {line,[{location,"init.erl",131}]}.
    {func_info,{atom,init},{atom,get_status},0}.
  {label,19}.
    {move,{atom,get_status},{x,0}}.
    {call_only,1,{f,34}}.


{function, fetch_loaded, 0, 21}.
  {label,20}.
    {line,[{location,"init.erl",135}]}.
    {func_info,{atom,init},{atom,fetch_loaded},0}.
  {label,21}.
    {move,{atom,fetch_loaded},{x,0}}.
    {call_only,1,{f,34}}.


{function, ensure_loaded, 1, 23}.
  {label,22}.
    {line,[{location,"init.erl",141}]}.
    {func_info,{atom,init},{atom,ensure_loaded},1}.
  {label,23}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ensure_loaded}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {call_only,1,{f,34}}.


{function, make_permanent, 2, 25}.
  {label,24}.
    {line,[{location,"init.erl",146}]}.
    {func_info,{atom,init},{atom,make_permanent},2}.
  {label,25}.
    {test_heap,4,2}.
    {put_tuple,3,{x,2}}.
    {put,{atom,make_permanent}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,34}}.


{function, notify_when_started, 1, 27}.
  {label,26}.
    {line,[{location,"init.erl",150}]}.
    {func_info,{atom,init},{atom,notify_when_started},1}.
  {label,27}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,notify_when_started}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {call_only,1,{f,34}}.


{function, wait_until_started, 0, 29}.
  {label,28}.
    {line,[{location,"init.erl",154}]}.
    {func_info,{atom,init},{atom,wait_until_started},0}.
  {label,29}.
    {line,[{location,"init.erl",155}]}.
  {label,30}.
    {loop_rec,{f,32},{x,0}}.
    {test,is_eq_exact,{f,31},[{x,0},{literal,{init,started}}]}.
    remove_message.
    {move,{atom,ok},{x,0}}.
    return.
  {label,31}.
    {loop_rec_end,{f,30}}.
  {label,32}.
    {wait,{f,30}}.


{function, request, 1, 34}.
  {label,33}.
    {line,[{location,"init.erl",159}]}.
    {func_info,{atom,init},{atom,request},1}.
  {label,34}.
    {allocate_heap,0,3,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",160}]}.
    send.
    {line,[{location,"init.erl",161}]}.
  {label,35}.
    {loop_rec,{f,37},{x,0}}.
    {test,is_tagged_tuple,{f,36},[{x,0},2,{atom,init}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    remove_message.
    {deallocate,0}.
    return.
  {label,36}.
    {loop_rec_end,{f,35}}.
  {label,37}.
    {wait,{f,35}}.


{function, restart, 0, 39}.
  {label,38}.
    {line,[{location,"init.erl",167}]}.
    {func_info,{atom,init},{atom,restart},0}.
  {label,39}.
    {allocate,0,0}.
    {move,{literal,{stop,restart}},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",167}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, reboot, 0, 41}.
  {label,40}.
    {line,[{location,"init.erl",170}]}.
    {func_info,{atom,init},{atom,reboot},0}.
  {label,41}.
    {allocate,0,0}.
    {move,{literal,{stop,reboot}},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",170}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, stop, 0, 43}.
  {label,42}.
    {line,[{location,"init.erl",173}]}.
    {func_info,{atom,init},{atom,stop},0}.
  {label,43}.
    {allocate,0,0}.
    {move,{literal,{stop,stop}},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",173}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, stop, 1, 45}.
  {label,44}.
    {line,[{location,"init.erl",177}]}.
    {func_info,{atom,init},{atom,stop},1}.
  {label,45}.
    {test,is_integer,{f,46},[{x,0}]}.
    {test,is_ge,{f,46},[{x,0},{integer,0}]}.
    {call_only,1,{f,56}}.
  {label,46}.
    {test,is_list,{f,50},[{x,0}]}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",180}]}.
    {call,1,{f,52}}.
    {test,is_atom,{f,49},[{x,0}]}.
    {select_val,{x,0},{f,49},{list,[{atom,true},{f,47},{atom,false},{f,48}]}}.
  {label,47}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,56},1}.
  {label,48}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"init.erl",184}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,49}.
    {line,[{location,"init.erl",180}]}.
    {case_end,{x,0}}.
  {label,50}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"init.erl",187}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, is_bytelist, 1, 52}.
  {label,51}.
    {line,[{location,"init.erl",189}]}.
    {func_info,{atom,init},{atom,is_bytelist},1}.
  {label,52}.
    {test,is_nonempty_list,{f,53},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_integer,{f,54},[{x,1}]}.
    {test,is_ge,{f,54},[{x,1},{integer,0}]}.
    {test,is_lt,{f,54},[{x,1},{integer,256}]}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,52}}.
  {label,53}.
    {test,is_nil,{f,54},[{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,54}.
    {move,{atom,false},{x,0}}.
    return.


{function, stop_1, 1, 56}.
  {label,55}.
    {line,[{location,"init.erl",195}]}.
    {func_info,{atom,init},{atom,stop_1},1}.
  {label,56}.
    {allocate_heap,0,6,1}.
    {put_tuple,2,{x,2}}.
    {put,{atom,stop}}.
    {put,{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,stop}}.
    {put,{x,2}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",195}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, boot, 1, 58}.
  {label,57}.
    {line,[{location,"init.erl",199}]}.
    {func_info,{atom,init},{atom,boot},1}.
  {label,58}.
    {allocate_zero,3,1}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",200}]}.
    {call_ext,2,{extfunc,erlang,register,2}}.
    {move,{atom,true},{x,1}}.
    {move,{atom,trap_exit},{x,0}}.
    {line,[{location,"init.erl",201}]}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {line,[{location,"init.erl",203}]}.
    {call,1,{f,471}}.
    {test,is_tuple,{f,62},[{x,0}]}.
    {test,test_arity,{f,62},[{x,0},3]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,1}}.
    {move,{atom,false},{x,2}}.
    {get_tuple_element,{x,0},0,{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{atom,profile_boot},{x,0}}.
    {line,[{location,"init.erl",205}]}.
    {call,3,{f,510}}.
    {line,[{location,"init.erl",205}]}.
    {call,1,{f,71}}.
    {test,is_atom,{f,61},[{x,0}]}.
    {select_val,{x,0},{f,61},{list,[{atom,false},{f,60},{atom,true},{f,59}]}}.
  {label,59}.
    {line,[{location,"init.erl",207}]}.
    {call,0,{f,583}}.
  {label,60}.
    {make_fun2,{f,686},0,0,0}.
    {move,{y,0},{x,1}}.
    {trim,1,2}.
    {line,[{location,"init.erl",209}]}.
    {call,2,{f,78}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {call_last,3,{f,86},2}.
  {label,61}.
    {line,[{location,"init.erl",205}]}.
    {case_end,{x,0}}.
  {label,62}.
    {line,[{location,"init.erl",203}]}.
    {badmatch,{x,0}}.


{function, prepare_run_args, 1, 64}.
  {label,63}.
    {line,[{location,"init.erl",212}]}.
    {func_info,{atom,init},{atom,prepare_run_args},1}.
  {label,64}.
    {test,is_tuple,{f,63},[{x,0}]}.
    {test,test_arity,{f,63},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,65},[{x,1},{atom,eval}]}.
    {test,is_nonempty_list,{f,66},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,65},[{x,4}]}.
    {test_heap,3,4}.
    {put_tuple,2,{x,0}}.
    {put,{atom,eval}}.
    {put,{x,3}}.
    return.
  {label,65}.
    {test,is_nonempty_list,{f,66},[{x,2}]}.
    {get_tl,{x,2},{x,3}}.
    {test,is_nil,{f,67},[{x,3}]}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,13}}.
  {label,66}.
    {test,is_nil,{f,67},[{x,2}]}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,13}}.
  {label,67}.
    {test,is_atom,{f,63},[{x,1}]}.
    {select_val,{x,1},{f,63},{list,[{atom,run},{f,68},{atom,s},{f,69}]}}.
  {label,68}.
    {test,is_nonempty_list,{f,63},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,63},[{x,4}]}.
    {allocate,2,5}.
    {get_list,{x,4},{y,0},{y,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",221}]}.
    {call,1,{f,71}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",221}]}.
    {call,1,{f,71}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",221}]}.
    {call,1,{f,16}}.
    {test_heap,4,1}.
    {put_list,{y,1},{x,0},{x,1}}.
    {put_list,{y,0},{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,69}.
    {test,is_nonempty_list,{f,63},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,63},[{x,4}]}.
    {allocate,2,5}.
    {get_list,{x,4},{y,0},{y,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",219}]}.
    {call,1,{f,71}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",219}]}.
    {call,1,{f,71}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",219}]}.
    {call,1,{f,13}}.
    {test_heap,4,1}.
    {put_list,{y,1},{x,0},{x,1}}.
    {put_list,{y,0},{x,1},{x,0}}.
    {deallocate,2}.
    return.


{function, b2a, 1, 71}.
  {label,70}.
    {line,[{location,"init.erl",223}]}.
    {func_info,{atom,init},{atom,b2a},1}.
  {label,71}.
    {test,is_binary,{f,72},[{x,0}]}.
    {allocate,0,1}.
    {line,[{location,"init.erl",224}]}.
    {call,1,{f,74}}.
    {line,[{location,"init.erl",224}]}.
    {call_ext_last,1,{extfunc,erlang,list_to_atom,1},0}.
  {label,72}.
    {test,is_atom,{f,70},[{x,0}]}.
    return.


{function, b2s, 1, 74}.
  {label,73}.
    {line,[{location,"init.erl",228}]}.
    {func_info,{atom,init},{atom,b2s},1}.
  {label,74}.
    {test,is_binary,{f,76},[{x,0}]}.
    {allocate,2,1}.
    {move,{x,0},{y,0}}.
    {'try',{y,1},{f,75}}.
    {line,[{location,"init.erl",230}]}.
    {call_ext,0,{extfunc,file,native_name_encoding,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",230}]}.
    {call_ext,2,{extfunc,unicode,characters_to_list,2}}.
    {try_end,{y,1}}.
    {deallocate,2}.
    return.
  {label,75}.
    {try_end,{y,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",232}]}.
    {call_ext_last,1,{extfunc,erlang,binary_to_list,1},2}.
  {label,76}.
    {test,is_list,{f,73},[{x,0}]}.
    return.


{function, map, 2, 78}.
  {label,77}.
    {line,[{location,"init.erl",237}]}.
    {func_info,{atom,init},{atom,map},2}.
  {label,78}.
    {test,is_nonempty_list,{f,79},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",240}]}.
    {call_fun,1}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,2},{y,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",240}]}.
    {call,2,{f,78}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,79}.
    {test,is_nil,{f,77},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, code_path_choice, 0, 81}.
  {label,80}.
    {line,[{location,"init.erl",243}]}.
    {func_info,{atom,init},{atom,code_path_choice},0}.
  {label,81}.
    {allocate,0,0}.
    {move,{atom,code_path_choice},{x,0}}.
    {line,[{location,"init.erl",244}]}.
    {call,1,{f,9}}.
    {test,is_tagged_tuple,{f,84},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_nonempty_list,{f,84},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,84},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,84},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_integer,{f,84},[{x,7}]}.
    {select_val,{x,7},
                {f,84},
                {list,[{integer,115},{f,82},{integer,114},{f,83}]}}.
  {label,82}.
    {test,is_eq_exact,{f,84},[{x,8},{literal,"trict"}]}.
    {test,is_nil,{f,84},[{x,6}]}.
    {test,is_nil,{f,84},[{x,4}]}.
    {move,{atom,strict},{x,0}}.
    {deallocate,0}.
    return.
  {label,83}.
    {test,is_eq_exact,{f,84},[{x,8},{literal,"elaxed"}]}.
    {test,is_nil,{f,84},[{x,6}]}.
    {test,is_nil,{f,84},[{x,4}]}.
    {move,{atom,relaxed},{x,0}}.
    {deallocate,0}.
    return.
  {label,84}.
    {move,{atom,relaxed},{x,0}}.
    {deallocate,0}.
    return.


{function, boot, 3, 86}.
  {label,85}.
    {line,[{location,"init.erl",253}]}.
    {func_info,{atom,init},{atom,boot},3}.
  {label,86}.
    {allocate,3,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"init.erl",254}]}.
    {call,0,{f,563}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",255}]}.
    {call,2,{f,322}}.
    {test_heap,11,1}.
    {put_tuple,10,{x,1}}.
    {put,{atom,state}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {put,nil}.
    {put,{x,0}}.
    {put,{literal,{starting,starting}}}.
    {put,nil}.
    {put,nil}.
    {put,nil}.
    {call_last,2,{f,120},3}.


{function, to_string, 2, 88}.
  {label,87}.
    {line,[{location,"init.erl",263}]}.
    {func_info,{atom,init},{atom,to_string},2}.
  {label,88}.
    {test,is_list,{f,91},[{x,0}]}.
    {test,is_lt,{f,90},[{x,1},{integer,4}]}.
    {allocate,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,1}}.
    {move,nil,{x,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"init.erl",264}]}.
    {call,2,{f,109}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",265}]}.
    {call,1,{f,99}}.
    {test,is_eq_exact,{f,89},[{x,0},{atom,true}]}.
    {gc_bif,length,{f,89},0,[{y,0}],{x,1}}.
    {test,is_lt,{f,89},[{integer,0},{x,1}]}.
    {move,{y,0},{x,0}}.
    {deallocate,3}.
    return.
  {label,89}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {trim,3,0}.
    {line,[{location,"init.erl",268}]}.
    {call,2,{f,678}}.
    {line,[{location,"init.erl",269}]}.
    {call,1,{f,105}}.
    {test_heap,4,1}.
    {put_list,{x,0},{literal,["]"]},{x,2}}.
    {put_list,{literal,"["},{x,2},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,109},0}.
  {label,90}.
    {test,is_list,{f,91},[{x,0}]}.
    {move,{literal,"[_]"},{x,0}}.
    return.
  {label,91}.
    {test,is_atom,{f,92},[{x,0}]}.
    {line,[{location,"init.erl",274}]}.
    {call_ext_only,1,{extfunc,erlang,atom_to_list,1}}.
  {label,92}.
    {test,is_pid,{f,93},[{x,0}]}.
    {line,[{location,"init.erl",276}]}.
    {call_ext_only,1,{extfunc,erlang,pid_to_list,1}}.
  {label,93}.
    {test,is_float,{f,94},[{x,0}]}.
    {line,[{location,"init.erl",278}]}.
    {call_ext_only,1,{extfunc,erlang,float_to_list,1}}.
  {label,94}.
    {test,is_integer,{f,95},[{x,0}]}.
    {line,[{location,"init.erl",280}]}.
    {call_ext_only,1,{extfunc,erlang,integer_to_list,1}}.
  {label,95}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,is_lt,{f,96},[{x,1},{integer,4}]}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",282}]}.
    {call_ext,1,{extfunc,erlang,tuple_to_list,1}}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"init.erl",282}]}.
    {call,2,{f,682}}.
    {line,[{location,"init.erl",283}]}.
    {call,1,{f,105}}.
    {test_heap,4,1}.
    {put_list,{x,0},{literal,["}"]},{x,2}}.
    {put_list,{literal,"{"},{x,2},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,109},0}.
  {label,96}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {move,{literal,"{_}"},{x,0}}.
    return.
  {label,97}.
    {move,nil,{x,0}}.
    return.


{function, printable_list, 1, 99}.
  {label,98}.
    {line,[{location,"init.erl",292}]}.
    {func_info,{atom,init},{atom,printable_list},1}.
  {label,99}.
    {test,is_nonempty_list,{f,102},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_integer,{f,103},[{x,1}]}.
    {test,is_ge,{f,100},[{x,1},{integer,32}]}.
    {test,is_ge,{f,103},[{integer,126},{x,1}]}.
    {jump,{f,101}}.
  {label,100}.
    {test,is_integer,{f,103},[{x,1}]}.
    {select_val,{x,1},
                {f,103},
                {list,[{integer,13},
                       {f,101},
                       {integer,10},
                       {f,101},
                       {integer,9},
                       {f,101}]}}.
  {label,101}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,99}}.
  {label,102}.
    {test,is_nil,{f,103},[{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,103}.
    {move,{atom,false},{x,0}}.
    return.


{function, join, 1, 105}.
  {label,104}.
    {line,[{location,"init.erl",300}]}.
    {func_info,{atom,init},{atom,join},1}.
  {label,105}.
    {test,is_nonempty_list,{f,107},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nil,{f,106},[{x,2}]}.
    return.
  {label,106}.
    {allocate,1,3}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",305}]}.
    {call,1,{f,105}}.
    {test_heap,4,1}.
    {put_list,{literal,","},{x,0},{x,1}}.
    {put_list,{y,0},{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,107}.
    {test,is_nil,{f,104},[{x,0}]}.
    return.


{function, flatten, 2, 109}.
  {label,108}.
    {line,[{location,"init.erl",307}]}.
    {func_info,{atom,init},{atom,flatten},2}.
  {label,109}.
    {test,is_nonempty_list,{f,111},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_list,{f,110},[{x,2}]}.
    {allocate,1,4}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",308}]}.
    {call,2,{f,109}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,109},1}.
  {label,110}.
    {allocate,1,4}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",310}]}.
    {call,2,{f,109}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,111}.
    {test,is_nil,{f,108},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, things_to_string, 1, 113}.
  {label,112}.
    {line,[{location,"init.erl",314}]}.
    {func_info,{atom,init},{atom,things_to_string},1}.
  {label,113}.
    {test,is_nonempty_list,{f,114},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{integer,0},{x,1}}.
    {line,[{location,"init.erl",315}]}.
    {call,2,{f,88}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",315}]}.
    {call,1,{f,113}}.
    {test_heap,2,1}.
    {put_list,{integer,41},{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"init.erl",315}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{integer,40},{x,0},{x,1}}.
    {put_list,{integer,32},{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,114}.
    {test,is_nil,{f,112},[{x,0}]}.
    return.


{function, halt_string, 2, 116}.
  {label,115}.
    {line,[{location,"init.erl",319}]}.
    {func_info,{atom,init},{atom,halt_string},2}.
  {label,116}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",320}]}.
    {call,1,{f,113}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",320}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.


{function, crash, 2, 118}.
  {label,117}.
    {line,[{location,"init.erl",326}]}.
    {func_info,{atom,init},{atom,crash},2}.
  {label,118}.
    {allocate,0,2}.
    {line,[{location,"init.erl",327}]}.
    {call,2,{f,116}}.
    {line,[{location,"init.erl",327}]}.
    {call_ext_last,1,{extfunc,erlang,halt,1},0}.


{function, boot_loop, 2, 120}.
  {label,119}.
    {line,[{location,"init.erl",331}]}.
    {func_info,{atom,init},{atom,boot_loop},2}.
  {label,120}.
    {allocate,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"init.erl",332}]}.
  {label,121}.
    {loop_rec,{f,135},{x,0}}.
    {test,is_tuple,{f,134},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,134},{list,[2,{f,122},3,{f,126}]}}.
  {label,122}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tagged_tuple,{f,123},[{x,2},2,{atom,script_id}]}.
    {test,is_eq_exact,{f,123},[{x,1},{y,2}]}.
    {get_tuple_element,{x,2},1,{x,4}}.
    remove_message.
    {test,is_tagged_tuple,{f,136},[{y,1},10,{atom,state}]}.
    {move,{y,1},{x,1}}.
    {move,{x,4},{x,2}}.
    {trim,2,1}.
    {move,{integer,8},{x,0}}.
    {line,[{location,"init.erl",347}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,123}.
    {test,is_eq_exact,{f,124},[{x,1},{atom,stop}]}.
    remove_message.
    {move,{y,1},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_last,2,{f,212},3}.
  {label,124}.
    {test,is_tuple,{f,125},[{x,2}]}.
    {test,test_arity,{f,134},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {test,is_eq_exact,{f,134},[{x,3},{atom,ensure_loaded}]}.
    {get_tuple_element,{x,2},1,{x,4}}.
    remove_message.
    {test,is_tagged_tuple,{f,138},[{y,1},10,{atom,state}]}.
    {move,{x,1},{y,0}}.
    {get_tuple_element,{y,1},8,{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",366}]}.
    {call,2,{f,149}}.
    {test,is_tuple,{f,137},[{x,0}]}.
    {test,test_arity,{f,137},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,init}}.
    {put,{x,1}}.
    {move,{x,3},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",367}]}.
    send.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {trim,2,1}.
    {move,{integer,9},{x,0}}.
    {line,[{location,"init.erl",368}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,125}.
    {test,is_eq_exact,{f,134},[{x,2},{atom,fetch_loaded}]}.
    remove_message.
    {test,is_tagged_tuple,{f,139},[{y,1},10,{atom,state}]}.
    {test_heap,3,2}.
    {get_tuple_element,{y,1},8,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,init}}.
    {put,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {line,[{location,"init.erl",363}]}.
    send.
    {move,{y,1},{x,1}}.
    {move,nil,{x,2}}.
    {trim,2,1}.
    {move,{integer,9},{x,0}}.
    {line,[{location,"init.erl",364}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,162},1}.
  {label,126}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_atom,{f,131},[{x,2}]}.
    {select_val,{x,2},
                {f,131},
                {list,[{atom,progress},
                       {f,127},
                       {atom,loaded},
                       {f,129},
                       {atom,started},
                       {f,130}]}}.
  {label,127}.
    {test,is_eq_exact,{f,128},[{x,3},{atom,started}]}.
    {test,is_eq_exact,{f,131},[{x,1},{y,2}]}.
    remove_message.
    {test,is_tagged_tuple,{f,141},[{y,1},10,{atom,state}]}.
    {get_tuple_element,{y,1},6,{x,1}}.
    {test,is_tuple,{f,140},[{x,1}]}.
    {test,test_arity,{f,140},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{y,0}}.
    {get_tuple_element,{y,1},9,{x,0}}.
    {line,[{location,"init.erl",340}]}.
    {call,1,{f,160}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,3}}.
    {put,{y,0}}.
    {put,{atom,started}}.
    {move,{x,3},{y,0}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,2}}.
    {kill,{y,1}}.
    {move,{integer,10},{x,0}}.
    {line,[{location,"init.erl",342}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},6}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,120},3}.
  {label,128}.
    {test,is_eq_exact,{f,131},[{x,1},{y,2}]}.
    remove_message.
    {test,is_tagged_tuple,{f,143},[{y,1},10,{atom,state}]}.
    {get_tuple_element,{y,1},6,{x,1}}.
    {test,is_tuple,{f,142},[{x,1}]}.
    {test,test_arity,{f,142},[{x,1},2]}.
    {test_heap,3,4}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,3}}.
    {move,{y,1},{x,1}}.
    {trim,2,1}.
    {move,{integer,7},{x,0}}.
    {line,[{location,"init.erl",345}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,129}.
    {test,is_eq_exact,{f,131},[{x,1},{y,2}]}.
    remove_message.
    {test,is_tagged_tuple,{f,144},[{y,1},10,{atom,state}]}.
    {get_tuple_element,{y,1},8,{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",334}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,2,1}.
    {move,{integer,9},{x,0}}.
    {line,[{location,"init.erl",335}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,130}.
    {test,is_eq_exact,{f,131},[{x,1},{y,2}]}.
    remove_message.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {trim,2,1}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",337}]}.
    {call,3,{f,164}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,131}.
    {test,is_eq_exact,{f,134},[{x,1},{atom,'EXIT'}]}.
    {test,is_eq_exact,{f,132},[{x,3},{atom,normal}]}.
    {test,is_eq_exact,{f,133},[{x,2},{y,2}]}.
    remove_message.
    {test,is_tagged_tuple,{f,146},[{y,1},10,{atom,state}]}.
    {get_tuple_element,{y,1},6,{x,1}}.
    {test,is_tuple,{f,145},[{x,1}]}.
    {test,test_arity,{f,145},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{y,2}}.
    {get_tuple_element,{y,1},9,{x,0}}.
    {line,[{location,"init.erl",350}]}.
    {call,1,{f,160}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,3}}.
    {put,{atom,started}}.
    {put,{y,2}}.
    {move,{x,3},{y,2}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,2}}.
    {trim,2,1}.
    {move,{integer,10},{x,0}}.
    {line,[{location,"init.erl",352}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},6}.
    {call_last,1,{f,169},1}.
  {label,132}.
    {test,is_eq_exact,{f,133},[{x,2},{y,2}]}.
    {test_heap,3,4}.
    remove_message.
    {move,{x,3},{y,2}}.
    {put_tuple,2,{x,0}}.
    {put,{literal,"init terminating in do_boot"}}.
    {put,{x,3}}.
    {trim,2,1}.
    {line,[{location,"init.erl",354}]}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {test_heap,2,0}.
    {put_list,{y,0},nil,{x,1}}.
    {move,{literal,"init terminating in do_boot"},{x,0}}.
    {call_last,2,{f,118},1}.
  {label,133}.
    remove_message.
    {test,is_tagged_tuple,{f,147},[{y,1},10,{atom,state}]}.
    {get_tuple_element,{y,1},4,{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{x,2}}.
    {line,[{location,"init.erl",358}]}.
    {call,3,{f,300}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,120},3}.
  {label,134}.
    remove_message.
    {move,{y,1},{x,1}}.
    {trim,2,1}.
    {line,[{location,"init.erl",370}]}.
    {call,2,{f,179}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,120},1}.
  {label,135}.
    {wait,{f,121}}.
  {label,136}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",347}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,137}.
    {line,[{location,"init.erl",366}]}.
    {badmatch,{x,0}}.
  {label,138}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",366}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,139}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",363}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,140}.
    {line,[{location,"init.erl",339}]}.
    {badmatch,{x,1}}.
  {label,141}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",339}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,142}.
    {line,[{location,"init.erl",344}]}.
    {badmatch,{x,1}}.
  {label,143}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",344}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,144}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",334}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,145}.
    {line,[{location,"init.erl",349}]}.
    {badmatch,{x,1}}.
  {label,146}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",349}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,147}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",357}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, ensure_loaded, 2, 149}.
  {label,148}.
    {line,[{location,"init.erl",373}]}.
    {func_info,{atom,init},{atom,ensure_loaded},2}.
  {label,149}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",374}]}.
    {call_ext,1,{extfunc,erlang,module_loaded,1}}.
    {test,is_atom,{f,152},[{x,0}]}.
    {select_val,{x,0},
                {f,152},
                {list,[{atom,true},{f,150},{atom,false},{f,151}]}}.
  {label,150}.
    {test_heap,6,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,module}}.
    {put,{y,1}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,151}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,154},2}.
  {label,152}.
    {line,[{location,"init.erl",374}]}.
    {case_end,{x,0}}.


{function, do_ensure_loaded, 2, 154}.
  {label,153}.
    {line,[{location,"init.erl",381}]}.
    {func_info,{atom,init},{atom,do_ensure_loaded},2}.
  {label,154}.
    {allocate,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"init.erl",382}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",382}]}.
    {call,0,{f,551}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",382}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{location,"init.erl",383}]}.
    {call_ext,1,{extfunc,erl_prim_loader,get_file,1}}.
    {test,is_tagged_tuple,{f,157},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"init.erl",385}]}.
    {call,2,{f,451}}.
    {test,is_atom,{f,158},[{x,0}]}.
    {select_val,{x,0},{f,158},{list,[{atom,ok},{f,155},{atom,error},{f,156}]}}.
  {label,155}.
    {test_heap,11,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,module}}.
    {put,{y,2}}.
    {put_tuple,2,{x,2}}.
    {put,{y,2}}.
    {put,{y,0}}.
    {put_list,{x,2},{y,1},{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {deallocate,3}.
    return.
  {label,156}.
    {test_heap,8,0}.
    {put_tuple,2,{x,1}}.
    {put,{y,2}}.
    {put,{y,0}}.
    {put_list,{x,1},{y,1},{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,error}}.
    {put,{x,1}}.
    {deallocate,3}.
    return.
  {label,157}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,1}}.
    {move,{x,1},{x,0}}.
    {deallocate,3}.
    return.
  {label,158}.
    {line,[{location,"init.erl",385}]}.
    {case_end,{x,0}}.


{function, notify, 1, 160}.
  {label,159}.
    {line,[{location,"init.erl",396}]}.
    {func_info,{atom,init},{atom,notify},1}.
  {label,160}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {make_fun2,{f,676},0,0,0}.
    {move,{y,0},{x,1}}.
    {line,[{location,"init.erl",397}]}.
    {call_ext_last,2,{extfunc,lists,foreach,2},1}.


{function, garb_boot_loop, 2, 162}.
  {label,161}.
    {line,[{location,"init.erl",407}]}.
    {func_info,{atom,init},{atom,garb_boot_loop},2}.
  {label,162}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",408}]}.
    {call_ext,0,{extfunc,erlang,garbage_collect,0}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,120},2}.


{function, new_kernelpid, 3, 164}.
  {label,163}.
    {line,[{location,"init.erl",411}]}.
    {func_info,{atom,init},{atom,new_kernelpid},3}.
  {label,164}.
    {test,is_tuple,{f,163},[{x,0}]}.
    {test,test_arity,{f,163},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {test,is_tuple,{f,165},[{x,4}]}.
    {test,test_arity,{f,166},[{x,4},2]}.
    {get_tuple_element,{x,4},0,{x,5}}.
    {test,is_eq_exact,{f,166},[{x,5},{atom,ok}]}.
    {get_tuple_element,{x,4},1,{x,6}}.
    {test,is_pid,{f,166},[{x,6}]}.
    {allocate,4,7}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,6},{y,3}}.
    {move,{x,6},{x,0}}.
    {line,[{location,"init.erl",412}]}.
    {call_ext,1,{extfunc,erlang,link,1}}.
    {test_heap,4,0}.
    {bif,self,{f,0},[],{x,0}}.
    {put_tuple,3,{x,1}}.
    {put,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,3}}.
    {move,{y,0},{x,0}}.
    {trim,1,3}.
    {line,[{location,"init.erl",413}]}.
    send.
    {test,is_tagged_tuple,{f,167},[{y,0},10,{atom,state}]}.
    {test_heap,5,0}.
    {get_tuple_element,{y,0},4,{x,1}}.
    {put_tuple,2,{x,3}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {put_list,{x,3},{x,1},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,5},{x,0}}.
    {line,[{location,"init.erl",415}]}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},3}.
  {label,165}.
    {test,is_eq_exact,{f,166},[{x,4},{atom,ignore}]}.
    {allocate_heap,1,3,3}.
    {bif,self,{f,0},[],{x,0}}.
    {move,{x,2},{y,0}}.
    {put_tuple,2,{x,3}}.
    {put,{x,0}}.
    {put,{atom,ignore}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {line,[{location,"init.erl",417}]}.
    send.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,166}.
    {allocate_heap,4,4,5}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,2}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,0}}.
    {put_tuple,3,{x,0}}.
    {put,{literal,"could not start kernel pid"}}.
    {put,{x,3}}.
    {put,{x,4}}.
    {line,[{location,"init.erl",420}]}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {move,{y,3},{x,1}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {line,[{location,"init.erl",421}]}.
    {call,2,{f,222}}.
    {test_heap,4,0}.
    {put_list,{y,1},nil,{x,2}}.
    {put_list,{y,0},{x,2},{x,1}}.
    {move,{literal,"could not start kernel pid"},{x,0}}.
    {call_last,2,{f,118},4}.
  {label,167}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",414}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, loop, 1, 169}.
  {label,168}.
    {line,[{location,"init.erl",426}]}.
    {func_info,{atom,init},{atom,loop},1}.
  {label,169}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",427}]}.
  {label,170}.
    {loop_rec,{f,175},{x,0}}.
    {test,is_tuple,{f,174},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,174},{list,[2,{f,171},3,{f,173}]}}.
  {label,171}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,172},[{x,1},{atom,stop}]}.
    remove_message.
    {move,{y,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_last,2,{f,212},1}.
  {label,172}.
    {test,is_eq_exact,{f,174},[{x,2},{atom,fetch_loaded}]}.
    remove_message.
    {test,is_tagged_tuple,{f,176},[{y,0},10,{atom,state}]}.
    {test_heap,3,2}.
    {get_tuple_element,{y,0},8,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,init}}.
    {put,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {line,[{location,"init.erl",436}]}.
    send.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,169},1}.
  {label,173}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,174},[{x,1},{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    remove_message.
    {test,is_tagged_tuple,{f,177},[{y,0},10,{atom,state}]}.
    {get_tuple_element,{y,0},4,{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{x,2}}.
    {line,[{location,"init.erl",430}]}.
    {call,3,{f,300}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,169},1}.
  {label,174}.
    remove_message.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"init.erl",439}]}.
    {call,2,{f,179}}.
    {call_last,1,{f,169},0}.
  {label,175}.
    {wait,{f,170}}.
  {label,176}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",435}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,177}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",429}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, handle_msg, 2, 179}.
  {label,178}.
    {line,[{location,"init.erl",442}]}.
    {func_info,{atom,init},{atom,handle_msg},2}.
  {label,179}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {'catch',{y,1},{f,180}}.
    {line,[{location,"init.erl",443}]}.
    {call,2,{f,183}}.
  {label,180}.
    {catch_end,{y,1}}.
    {test,is_tagged_tuple,{f,181},[{x,0},2,{atom,new_state}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {deallocate,2}.
    return.
  {label,181}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.


{function, do_handle_msg, 2, 183}.
  {label,182}.
    {line,[{location,"init.erl",448}]}.
    {func_info,{atom,init},{atom,do_handle_msg},2}.
  {label,183}.
    {test,is_tagged_tuple,{f,200},[{x,1},10,{atom,state}]}.
    {test,is_tuple,{f,196},[{x,0}]}.
    {test,test_arity,{f,196},[{x,0},2]}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {get_tuple_element,{x,1},2,{x,4}}.
    {get_tuple_element,{x,1},6,{x,5}}.
    {get_tuple_element,{x,1},7,{x,6}}.
    {get_tuple_element,{x,1},9,{x,7}}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,8}}.
    {test,is_tuple,{f,191},[{x,8}]}.
    {select_tuple_arity,{x,8},{f,196},{list,[2,{f,184},3,{f,190}]}}.
  {label,184}.
    {get_tuple_element,{x,8},0,{x,9}}.
    {get_tuple_element,{x,8},1,{x,10}}.
    {test,is_atom,{f,196},[{x,9}]}.
    {select_val,{x,9},
                {f,196},
                {list,[{atom,notify_when_started},
                       {f,185},
                       {atom,get_argument},
                       {f,188},
                       {atom,ensure_loaded},
                       {f,189}]}}.
  {label,185}.
    {test,is_tuple,{f,187},[{x,5}]}.
    {test,test_arity,{f,187},[{x,5},2]}.
    {get_tuple_element,{x,5},0,{x,0}}.
    {test,is_ne_exact,{f,186},[{x,0},{atom,started}]}.
    {get_tuple_element,{x,5},1,{x,3}}.
    {test,is_eq_exact,{f,187},[{x,3},{atom,started}]}.
  {label,186}.
    {allocate,0,3}.
    {move,{literal,{init,started}},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",472}]}.
    send.
    {deallocate,0}.
    return.
  {label,187}.
    {allocate,3,11}.
    {move,{x,1},{y,2}}.
    {move,{literal,{init,ok}},{x,1}}.
    {move,{x,7},{y,0}}.
    {move,{x,10},{y,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",474}]}.
    send.
    {test_heap,2,0}.
    {put_list,{y,1},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {trim,3,0}.
    {move,{integer,10},{x,0}}.
    {line,[{location,"init.erl",475}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,new_state}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,188}.
    {allocate,1,11}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,10},{x,0}}.
    {line,[{location,"init.erl",460}]}.
    {call,2,{f,531}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init}}.
    {put,{x,0}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",460}]}.
    send.
    {deallocate,1}.
    return.
  {label,189}.
    {allocate,0,3}.
    {move,{literal,{init,not_allowed}},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",478}]}.
    send.
    {deallocate,0}.
    return.
  {label,190}.
    {get_tuple_element,{x,8},0,{x,9}}.
    {test,is_eq_exact,{f,196},[{x,9},{atom,make_permanent}]}.
    {allocate,1,9}.
    {get_tuple_element,{x,8},1,{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{x,2}}.
    {move,{x,1},{x,3}}.
    {get_tuple_element,{x,8},2,{x,1}}.
    {line,[{location,"init.erl",466}]}.
    {call,4,{f,202}}.
    {test,is_tuple,{f,199},[{x,0}]}.
    {test,test_arity,{f,199},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,init}}.
    {put,{x,1}}.
    {move,{x,3},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",467}]}.
    send.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,new_state}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,191}.
    {test,is_atom,{f,196},[{x,8}]}.
    {select_val,{x,8},
                {f,196},
                {list,[{atom,get_arguments},
                       {f,192},
                       {atom,script_id},
                       {f,193},
                       {atom,get_status},
                       {f,194},
                       {atom,get_plain_arguments},
                       {f,195}]}}.
  {label,192}.
    {allocate,1,4}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",458}]}.
    {call,1,{f,524}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init}}.
    {put,{x,0}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",458}]}.
    send.
    {deallocate,1}.
    return.
  {label,193}.
    {allocate_heap,0,3,7}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init}}.
    {put,{x,6}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",464}]}.
    send.
    {deallocate,0}.
    return.
  {label,194}.
    {allocate_heap,0,3,6}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init}}.
    {put,{x,5}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",462}]}.
    send.
    {deallocate,0}.
    return.
  {label,195}.
    {allocate_heap,0,3,5}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init}}.
    {put,{x,4}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",456}]}.
    send.
    {deallocate,0}.
    return.
  {label,196}.
    {allocate_zero,2,1}.
    {move,{x,0},{y,1}}.
    {move,{atom,user},{x,0}}.
    {line,[{location,"init.erl",480}]}.
    {call_ext,1,{extfunc,erlang,whereis,1}}.
    {test,is_eq_exact,{f,198},[{x,0},{atom,undefined}]}.
    {move,{atom,microsecond},{x,0}}.
    {line,[{location,"init.erl",482}]}.
    {call_ext,1,{extfunc,erlang,monotonic_time,1}}.
    {'catch',{y,0},{f,197}}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{x,1},{x,2}}.
    {line,[{location,"init.erl",484}]}.
    {put_map_assoc,{f,0},
                   {literal,#{}},
                   {x,0},
                   3,
                   {list,[{atom,pid},
                          {x,1},
                          {atom,gl},
                          {x,2},
                          {atom,error_logger},
                          {literal,#{tag => info_msg}},
                          {atom,time},
                          {x,0}]}}.
    {test_heap,8,1}.
    {put_list,{y,1},nil,{x,2}}.
    {put_tuple,5,{x,1}}.
    {put,{atom,log}}.
    {put,{atom,info}}.
    {put,{literal,"init got unexpected: ~p"}}.
    {put,{x,2}}.
    {put,{x,0}}.
    {kill,{y,1}}.
    {move,{atom,logger},{x,0}}.
    {line,[{location,"init.erl",483}]}.
    send.
  {label,197}.
    {catch_end,{y,0}}.
    {deallocate,2}.
    return.
  {label,198}.
    {move,{y,1},{x,1}}.
    {trim,2,0}.
    {line,[{location,"init.erl",489}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,199}.
    {line,[{location,"init.erl",466}]}.
    {badmatch,{x,0}}.
  {label,200}.
    {line,[{location,"init.erl",453}]}.
    {badmatch,{x,1}}.


{function, make_permanent, 4, 202}.
  {label,201}.
    {line,[{location,"init.erl",504}]}.
    {func_info,{atom,init},{atom,make_permanent},4}.
  {label,202}.
    {allocate,2,4}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{y,0}}.
    {move,{atom,boot},{x,0}}.
    {line,[{location,"init.erl",505}]}.
    {call,3,{f,206}}.
    {test,is_tagged_tuple,{f,203},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,1},{x,1}}.
    {kill,{y,1}}.
    {move,{atom,config},{x,0}}.
    {line,[{location,"init.erl",507}]}.
    {call,3,{f,206}}.
    {test,is_tagged_tuple,{f,203},[{x,0},2,{atom,ok}]}.
    {test,is_tagged_tuple,{f,204},[{y,0},10,{atom,state}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {trim,2,0}.
    {move,{integer,2},{x,0}}.
    {line,[{location,"init.erl",509}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,203}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,204}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",509}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, set_flag, 3, 206}.
  {label,205}.
    {line,[{location,"init.erl",517}]}.
    {func_info,{atom,init},{atom,set_flag},3}.
  {label,206}.
    {test,is_eq_exact,{f,207},[{x,1},{atom,false}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,2}}.
    return.
  {label,207}.
    {test,is_list,{f,210},[{x,1}]}.
    {allocate,4,3}.
    {init,{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,3}}.
    {line,[{location,"init.erl",522}]}.
    {call_ext,0,{extfunc,file,native_name_encoding,0}}.
    {move,{x,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {'catch',{y,0},{f,208}}.
    {line,[{location,"init.erl",523}]}.
    {call_ext,3,{extfunc,unicode,characters_to_binary,3}}.
  {label,208}.
    {catch_end,{y,0}}.
    {test,is_tagged_tuple,{f,209},[{x,0},2,{atom,'EXIT'}]}.
    {move,{literal,{error,badarg}},{x,0}}.
    {deallocate,4}.
    return.
  {label,209}.
    {move,{y,3},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,2},{x,0}}.
    {trim,4,0}.
    {line,[{location,"init.erl",527}]}.
    {call,3,{f,538}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,210}.
    {move,{literal,{error,badarg}},{x,0}}.
    return.


{function, stop, 2, 212}.
  {label,211}.
    {line,[{location,"init.erl",539}]}.
    {func_info,{atom,init},{atom,stop},2}.
  {label,212}.
    {test,is_tagged_tuple,{f,214},[{x,1},10,{atom,state}]}.
    {move,nil,{x,2}}.
    {get_tuple_element,{x,1},5,{x,3}}.
    {get_tuple_element,{x,1},6,{x,4}}.
    {test,is_tuple,{f,213},[{x,4}]}.
    {test,test_arity,{f,213},[{x,4},2]}.
    {allocate_heap,2,3,5}.
    {get_tuple_element,{x,4},1,{x,2}}.
    {move,{x,0},{y,1}}.
    {move,{x,3},{y,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,stopping}}.
    {put,{x,2}}.
    {move,{x,4},{x,2}}.
    {move,{integer,7},{x,0}}.
    {line,[{location,"init.erl",542}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",543}]}.
    {call,2,{f,222}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,216},2}.
  {label,213}.
    {line,[{location,"init.erl",541}]}.
    {badmatch,{x,4}}.
  {label,214}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",540}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, do_stop, 2, 216}.
  {label,215}.
    {line,[{location,"init.erl",546}]}.
    {func_info,{atom,init},{atom,do_stop},2}.
  {label,216}.
    {test,is_tuple,{f,217},[{x,0}]}.
    {test,test_arity,{f,215},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {test,is_eq_exact,{f,215},[{x,2},{atom,stop}]}.
    {allocate,1,2}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",557}]}.
    {call,1,{f,228}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",558}]}.
    {call_ext_last,1,{extfunc,erlang,halt,1},1}.
  {label,217}.
    {test,is_atom,{f,215},[{x,0}]}.
    {select_val,{x,0},
                {f,215},
                {list,[{atom,restart},
                       {f,218},
                       {atom,stop},
                       {f,219},
                       {atom,reboot},
                       {f,220}]}}.
  {label,218}.
    {test,is_tagged_tuple,{f,215},[{x,1},10,{atom,state}]}.
    {allocate,3,2}.
    {get_tuple_element,{x,1},1,{y,2}}.
    {get_tuple_element,{x,1},2,{y,1}}.
    {get_tuple_element,{x,1},3,{y,0}}.
    {line,[{location,"init.erl",548}]}.
    {call,0,{f,225}}.
    {line,[{location,"init.erl",549}]}.
    {call_ext,0,{extfunc,erts_internal,erase_persistent_terms,0}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,86},3}.
  {label,219}.
    {allocate,0,2}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",554}]}.
    {call,1,{f,228}}.
    {line,[{location,"init.erl",555}]}.
    {call_ext_last,0,{extfunc,erlang,halt,0},0}.
  {label,220}.
    {line,[{location,"init.erl",552}]}.
    {call_ext_only,0,{extfunc,erlang,halt,0}}.


{function, clear_system, 2, 222}.
  {label,221}.
    {line,[{location,"init.erl",560}]}.
    {func_info,{atom,init},{atom,clear_system},2}.
  {label,222}.
    {test,is_tagged_tuple,{f,223},[{x,1},10,{atom,state}]}.
    {allocate,3,2}.
    {move,{x,0},{y,2}}.
    {get_tuple_element,{x,1},4,{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",561}]}.
    {call,1,{f,236}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",562}]}.
    {call,1,{f,238}}.
    {move,{y,2},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{x,1},{y,2}}.
    {kill,{y,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",563}]}.
    {call,4,{f,232}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{location,"init.erl",564}]}.
    {call,1,{f,284}}.
    {test_heap,2,0}.
    {put_list,{y,0},nil,{x,0}}.
    {trim,1,0}.
    {line,[{location,"init.erl",565}]}.
    {call,1,{f,275}}.
    {move,{literal,[logger_server]},{x,0}}.
    {call_last,1,{f,287},0}.
  {label,223}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",561}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, flush, 0, 225}.
  {label,224}.
    {line,[{location,"init.erl",568}]}.
    {func_info,{atom,init},{atom,flush},0}.
  {label,225}.
    {line,[{location,"init.erl",569}]}.
    {loop_rec,{f,226},{x,0}}.
    remove_message.
    {call_only,0,{f,225}}.
  {label,226}.
    timeout.
    {move,{atom,ok},{x,0}}.
    return.


{function, stop_heart, 1, 228}.
  {label,227}.
    {line,[{location,"init.erl",575}]}.
    {func_info,{atom,init},{atom,stop_heart},1}.
  {label,228}.
    {test,is_tagged_tuple,{f,230},[{x,0},10,{atom,state}]}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {get_tuple_element,{x,0},4,{x,0}}.
    {line,[{location,"init.erl",576}]}.
    {call,1,{f,236}}.
    {test,is_eq_exact,{f,229},[{x,0},{atom,false}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,229}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{x,1},{x,2}}.
    {move,{y,0},{x,3}}.
    {call_last,4,{f,249},1}.
  {label,230}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",576}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, shutdown_pids, 4, 232}.
  {label,231}.
    {line,[{location,"init.erl",586}]}.
    {func_info,{atom,init},{atom,shutdown_pids},4}.
  {label,232}.
    {test,is_tagged_tuple,{f,234},[{x,3},10,{atom,state}]}.
    {allocate,6,4}.
    {init,{y,0}}.
    {get_tuple_element,{x,3},4,{y,3}}.
    {move,{x,0},{y,5}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,4}}.
    {get_tuple_element,{x,3},1,{x,0}}.
    {line,[{location,"init.erl",587}]}.
    {call,1,{f,456}}.
    {move,{x,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,3},{x,0}}.
    {move,{x,2},{y,3}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {'try',{y,0},{f,233}}.
    {line,[{location,"init.erl",588}]}.
    {call,4,{f,244}}.
  {label,233}.
    {try_end,{y,0}}.
    {move,{y,4},{x,1}}.
    {kill,{y,4}}.
    {move,{y,5},{x,0}}.
    {line,[{location,"init.erl",589}]}.
    {call,2,{f,265}}.
    {move,{y,5},{x,0}}.
    {kill,{y,5}}.
    {line,[{location,"init.erl",590}]}.
    {call,1,{f,278}}.
    {move,{y,3},{x,0}}.
    {call_last,1,{f,463},6}.
  {label,234}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",587}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, get_heart, 1, 236}.
  {label,235}.
    {line,[{location,"init.erl",593}]}.
    {func_info,{atom,init},{atom,get_heart},1}.
  {label,236}.
    {move,{x,0},{x,1}}.
    {move,{atom,heart},{x,0}}.
    {call_only,2,{f,240}}.


{function, get_logger, 1, 238}.
  {label,237}.
    {line,[{location,"init.erl",596}]}.
    {func_info,{atom,init},{atom,get_logger},1}.
  {label,238}.
    {move,{x,0},{x,1}}.
    {move,{atom,logger},{x,0}}.
    {call_only,2,{f,240}}.


{function, get_kernelpid, 2, 240}.
  {label,239}.
    {line,[{location,"init.erl",599}]}.
    {func_info,{atom,init},{atom,get_kernelpid},2}.
  {label,240}.
    {test,is_nonempty_list,{f,242},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_tuple,{f,241},[{x,2}]}.
    {test,test_arity,{f,241},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_eq_exact,{f,241},[{x,4},{x,0}]}.
    {get_tuple_element,{x,2},1,{x,0}}.
    return.
  {label,241}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,240}}.
  {label,242}.
    {move,{atom,false},{x,0}}.
    return.


{function, shutdown, 4, 244}.
  {label,243}.
    {line,[{location,"init.erl",604}]}.
    {func_info,{atom,init},{atom,shutdown},4}.
  {label,244}.
    {test,is_nonempty_list,{f,247},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_tuple,{f,247},[{x,4}]}.
    {test,test_arity,{f,247},[{x,4},2]}.
    {get_tuple_element,{x,4},0,{x,6}}.
    {select_val,{x,6},
                {f,246},
                {list,[{atom,heart},{f,245},{atom,logger},{f,245}]}}.
  {label,245}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,244}}.
  {label,246}.
    {allocate,4,6}.
    {get_tuple_element,{x,4},1,{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,5},{y,3}}.
    {line,[{location,"init.erl",608}]}.
    {call,4,{f,249}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,244},4}.
  {label,247}.
    {move,{atom,true},{x,0}}.
    return.


{function, shutdown_kernel_pid, 4, 249}.
  {label,248}.
    {line,[{location,"init.erl",618}]}.
    {func_info,{atom,init},{atom,shutdown_kernel_pid},4}.
  {label,249}.
    {allocate_heap,3,4,4}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,0}}.
    {put_tuple,3,{x,4}}.
    {put,{atom,'EXIT'}}.
    {put,{x,1}}.
    {put,{atom,shutdown}}.
    {move,{x,4},{x,1}}.
    {line,[{location,"init.erl",619}]}.
    send.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,3}}.
    {move,{y,0},{x,0}}.
    {call_last,4,{f,251},3}.


{function, shutdown_loop, 4, 251}.
  {label,250}.
    {line,[{location,"init.erl",628}]}.
    {func_info,{atom,init},{atom,shutdown_loop},4}.
  {label,251}.
    {allocate,4,4}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {line,[{location,"init.erl",629}]}.
  {label,252}.
    {loop_rec,{f,259},{x,0}}.
    {test,is_tuple,{f,258},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,258},{list,[2,{f,253},3,{f,256}]}}.
  {label,253}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,254},[{x,2},{atom,timeout}]}.
    {test,is_eq_exact,{f,254},[{x,1},{y,2}]}.
    remove_message.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {move,{literal,{init,shutdown_timeout}},{x,0}}.
    {line,[{location,"init.erl",634}]}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {move,{atom,timeout},{x,0}}.
    {line,[{location,"init.erl",635}]}.
    {call_ext,1,{extfunc,erlang,throw,1}}.
  {label,254}.
    {test,is_eq_exact,{f,255},[{x,1},{atom,stop}]}.
    remove_message.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,251},4}.
  {label,255}.
    {test,is_eq_exact,{f,258},[{x,2},{atom,fetch_loaded}]}.
    remove_message.
    {test,is_tagged_tuple,{f,260},[{y,1},10,{atom,state}]}.
    {test_heap,3,2}.
    {get_tuple_element,{y,1},8,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,init}}.
    {put,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {line,[{location,"init.erl",639}]}.
    send.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,251},4}.
  {label,256}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,258},[{x,1},{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,257},[{x,2},{y,3}]}.
    remove_message.
    {move,{y,0},{x,0}}.
    {trim,4,0}.
    {line,[{location,"init.erl",631}]}.
    {call,1,{f,546}}.
    {line,[{location,"init.erl",631}]}.
    {call,1,{f,262}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,257}.
    {test_heap,2,1}.
    remove_message.
    {put_list,{x,0},{y,0},{x,3}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,251},4}.
  {label,258}.
    remove_message.
    {move,{y,1},{x,1}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",645}]}.
    {call,2,{f,179}}.
    {move,{x,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,251},4}.
  {label,259}.
    {wait,{f,252}}.
  {label,260}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {line,[{location,"init.erl",639}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, resend, 1, 262}.
  {label,261}.
    {line,[{location,"init.erl",649}]}.
    {func_info,{atom,init},{atom,resend},1}.
  {label,262}.
    {test,is_nonempty_list,{f,263},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,1},{y,0}}.
    {bif,self,{f,0},[],{x,0}}.
    {line,[{location,"init.erl",650}]}.
    send.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,262},1}.
  {label,263}.
    {move,{atom,ok},{x,0}}.
    return.


{function, kill_all_pids, 2, 265}.
  {label,264}.
    {line,[{location,"init.erl",657}]}.
    {func_info,{atom,init},{atom,kill_all_pids},2}.
  {label,265}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",658}]}.
    {call,2,{f,268}}.
    {test,is_nil,{f,266},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,2}.
    return.
  {label,266}.
    {line,[{location,"init.erl",662}]}.
    {call,1,{f,275}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,265},2}.


{function, get_pids, 2, 268}.
  {label,267}.
    {line,[{location,"init.erl",667}]}.
    {func_info,{atom,init},{atom,get_pids},2}.
  {label,268}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",668}]}.
    {call_ext,0,{extfunc,erlang,processes,0}}.
    {line,[{location,"init.erl",668}]}.
    {call,1,{f,670}}.
    {bif,self,{f,0},[],{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,3}}.
    {move,{y,1},{x,0}}.
    {call_last,4,{f,270},2}.


{function, delete, 4, 270}.
  {label,269}.
    {line,[{location,"init.erl",671}]}.
    {func_info,{atom,init},{atom,delete},4}.
  {label,270}.
    {test,is_nonempty_list,{f,273},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_ne_exact,{f,271},[{x,4},{x,0}]}.
    {test,is_ne_exact,{f,271},[{x,4},{x,1}]}.
    {test,is_eq_exact,{f,272},[{x,4},{x,2}]}.
  {label,271}.
    {move,{x,5},{x,3}}.
    {call_only,4,{f,270}}.
  {label,272}.
    {allocate,1,6}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{y,0}}.
    {line,[{location,"init.erl",674}]}.
    {call,4,{f,270}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,273}.
    {test,is_nil,{f,269},[{x,3}]}.
    {move,nil,{x,0}}.
    return.


{function, kill_em, 1, 275}.
  {label,274}.
    {line,[{location,"init.erl",677}]}.
    {func_info,{atom,init},{atom,kill_em},1}.
  {label,275}.
    {test,is_nonempty_list,{f,276},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{atom,kill},{x,1}}.
    {line,[{location,"init.erl",678}]}.
    {call_ext,2,{extfunc,erlang,exit,2}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,275},1}.
  {label,276}.
    {test,is_nil,{f,274},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, kill_all_ports, 1, 278}.
  {label,277}.
    {line,[{location,"init.erl",690}]}.
    {func_info,{atom,init},{atom,kill_all_ports},1}.
  {label,278}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",691}]}.
    {call_ext,0,{extfunc,erlang,ports,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,280},1}.


{function, kill_all_ports, 2, 280}.
  {label,279}.
    {line,[{location,"init.erl",693}]}.
    {func_info,{atom,init},{atom,kill_all_ports},2}.
  {label,280}.
    {test,is_nonempty_list,{f,282},[{x,1}]}.
    {allocate,3,2}.
    {get_list,{x,1},{y,2},{y,1}}.
    {move,{x,0},{y,0}}.
    {move,{atom,connected},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"init.erl",694}]}.
    {call_ext,2,{extfunc,erlang,port_info,2}}.
    {test,is_tagged_tuple,{f,281},[{x,0},2,{atom,connected}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,281},[{x,2},{y,0}]}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,280},3}.
  {label,281}.
    {move,{atom,kill},{x,1}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {line,[{location,"init.erl",698}]}.
    {call_ext,2,{extfunc,erlang,exit,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,280},3}.
  {label,282}.
    {move,{atom,ok},{x,0}}.
    return.


{function, unload, 1, 284}.
  {label,283}.
    {line,[{location,"init.erl",704}]}.
    {func_info,{atom,init},{atom,unload},1}.
  {label,284}.
    {test,is_eq_exact,{f,285},[{x,0},{atom,false}]}.
    {allocate_zero,1,0}.
    {line,[{location,"init.erl",705}]}.
    {call_ext,0,{extfunc,erlang,pre_loaded,0}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",705}]}.
    {call_ext,0,{extfunc,erlang,loaded,0}}.
    {test_heap,2,1}.
    {put_list,{atom,logger_server},{y,0},{x,2}}.
    {move,{x,0},{x,1}}.
    {trim,1,0}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",705}]}.
    {call,2,{f,293}}.
    {call_last,1,{f,287},0}.
  {label,285}.
    {allocate_zero,1,0}.
    {line,[{location,"init.erl",707}]}.
    {call_ext,0,{extfunc,erlang,pre_loaded,0}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",707}]}.
    {call_ext,0,{extfunc,erlang,loaded,0}}.
    {test_heap,4,1}.
    {put_list,{atom,logger_server},{y,0},{x,2}}.
    {put_list,{atom,heart},{x,2},{x,2}}.
    {move,{x,0},{x,1}}.
    {trim,1,0}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",707}]}.
    {call,2,{f,293}}.
    {call_last,1,{f,287},0}.


{function, do_unload, 1, 287}.
  {label,286}.
    {line,[{location,"init.erl",709}]}.
    {func_info,{atom,init},{atom,do_unload},1}.
  {label,287}.
    {test,is_nonempty_list,{f,291},[{x,0}]}.
    {allocate,3,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{x,0},{y,1}}.
    {'try',{y,2},{f,288}}.
    {line,[{location,"init.erl",710}]}.
    {call_ext,1,{extfunc,erlang,purge_module,1}}.
  {label,288}.
    {try_end,{y,2}}.
    {move,{y,1},{x,0}}.
    {'try',{y,2},{f,289}}.
    {line,[{location,"init.erl",711}]}.
    {call_ext,1,{extfunc,erlang,delete_module,1}}.
  {label,289}.
    {try_end,{y,2}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {'try',{y,2},{f,290}}.
    {line,[{location,"init.erl",712}]}.
    {call_ext,1,{extfunc,erlang,purge_module,1}}.
  {label,290}.
    {try_end,{y,2}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,287},3}.
  {label,291}.
    {test,is_nil,{f,286},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, sub, 2, 293}.
  {label,292}.
    {line,[{location,"init.erl",717}]}.
    {func_info,{atom,init},{atom,sub},2}.
  {label,293}.
    {test,is_nonempty_list,{f,294},[{x,0}]}.
    {allocate,1,2}.
    {get_list,{x,0},{x,0},{y,0}}.
    {line,[{location,"init.erl",717}]}.
    {call,2,{f,296}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,293},1}.
  {label,294}.
    {test,is_nil,{f,292},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, del, 2, 296}.
  {label,295}.
    {line,[{location,"init.erl",720}]}.
    {func_info,{atom,init},{atom,del},2}.
  {label,296}.
    {test,is_nonempty_list,{f,298},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_eq_exact,{f,297},[{x,2},{x,0}]}.
    {move,{x,3},{x,0}}.
    return.
  {label,297}.
    {allocate,1,4}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",721}]}.
    {call,2,{f,296}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,298}.
    {test,is_nil,{f,295},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, terminate, 3, 300}.
  {label,299}.
    {line,[{location,"init.erl",734}]}.
    {func_info,{atom,init},{atom,terminate},3}.
  {label,300}.
    {allocate_zero,2,3}.
    {move,{x,2},{y,1}}.
    {line,[{location,"init.erl",735}]}.
    {call,2,{f,303}}.
    {test,is_tagged_tuple,{f,301},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{integer,500},{x,0}}.
    {line,[{location,"init.erl",737}]}.
    {call,1,{f,307}}.
    {test_heap,4,0}.
    {put_tuple,3,{x,0}}.
    {put,{literal,"Kernel pid terminated"}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {line,[{location,"init.erl",738}]}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {test_heap,4,0}.
    {put_list,{y,1},nil,{x,2}}.
    {put_list,{y,0},{x,2},{x,1}}.
    {move,{literal,"Kernel pid terminated"},{x,0}}.
    {call_last,2,{f,118},2}.
  {label,301}.
    {move,{atom,false},{x,0}}.
    {deallocate,2}.
    return.


{function, kernel_pid, 2, 303}.
  {label,302}.
    {line,[{location,"init.erl",744}]}.
    {func_info,{atom,init},{atom,kernel_pid},2}.
  {label,303}.
    {test,is_nonempty_list,{f,305},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_tuple,{f,304},[{x,2}]}.
    {test,test_arity,{f,304},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {get_tuple_element,{x,2},1,{x,5}}.
    {test,is_eq_exact,{f,304},[{x,5},{x,0}]}.
    {test_heap,3,5}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,4}}.
    return.
  {label,304}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,303}}.
  {label,305}.
    {move,{atom,false},{x,0}}.
    return.


{function, sleep, 1, 307}.
  {label,306}.
    {line,[{location,"init.erl",751}]}.
    {func_info,{atom,init},{atom,sleep},1}.
  {label,307}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",751}]}.
  {label,308}.
    {wait_timeout,{f,308},{y,0}}.
    timeout.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.


{function, start_prim_loader, 3, 310}.
  {label,309}.
    {line,[{location,"init.erl",758}]}.
    {func_info,{atom,init},{atom,start_prim_loader},3}.
  {label,310}.
    {test,is_tuple,{f,309},[{x,2}]}.
    {test,test_arity,{f,309},[{x,2},2]}.
    {allocate_zero,2,3}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {move,{x,0},{y,1}}.
    {test,is_eq_exact,{f,311},[{x,1},{atom,false}]}.
    {test_heap,2,5}.
    {put_list,{literal,"."},{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",760}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {jump,{f,312}}.
  {label,311}.
    {move,{x,1},{x,0}}.
  {label,312}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",763}]}.
    {call_ext,0,{extfunc,erl_prim_loader,start,0}}.
    {test,is_tuple,{f,315},[{x,0}]}.
    {test,test_arity,{f,315},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,315},[{x,1}]}.
    {select_val,{x,1},{f,315},{list,[{atom,error},{f,313},{atom,ok},{f,314}]}}.
  {label,313}.
    {test_heap,3,3}.
    {move,{x,2},{y,1}}.
    {put_tuple,2,{x,0}}.
    {put,{literal,"cannot start loader"}}.
    {put,{x,2}}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",768}]}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",769}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,314}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",765}]}.
    {call_ext,1,{extfunc,erl_prim_loader,set_path,1}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,317},2}.
  {label,315}.
    {line,[{location,"init.erl",763}]}.
    {case_end,{x,0}}.


{function, add_to_kernel, 2, 317}.
  {label,316}.
    {line,[{location,"init.erl",772}]}.
    {func_info,{atom,init},{atom,add_to_kernel},2}.
  {label,317}.
    {allocate_heap,2,10,2}.
    {bif,self,{f,0},[],{x,2}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,ok}}.
    {put,{y,1}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,erl_prim_loader}}.
    {put,{x,3}}.
    {put_tuple,3,{x,1}}.
    {put,{x,2}}.
    {put,{atom,started}}.
    {put,{x,4}}.
    {line,[{location,"init.erl",773}]}.
    send.
    {line,[{location,"init.erl",774}]}.
  {label,318}.
    {loop_rec,{f,320},{x,0}}.
    {test,is_tuple,{f,319},[{x,0}]}.
    {test,test_arity,{f,319},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,319},[{x,2},{atom,ok}]}.
    {test,is_eq_exact,{f,319},[{x,1},{y,0}]}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,319},[{x,3},{y,1}]}.
    remove_message.
    {move,{y,1},{x,0}}.
    {trim,2,0}.
    {line,[{location,"init.erl",776}]}.
    {call_ext,1,{extfunc,erlang,unlink,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,319}.
    {loop_rec_end,{f,318}}.
  {label,320}.
    {wait,{f,318}}.


{function, do_boot, 2, 322}.
  {label,321}.
    {line,[{location,"init.erl",786}]}.
    {func_info,{atom,init},{atom,do_boot},2}.
  {label,322}.
    {bif,self,{f,0},[],{x,2}}.
    {move,{x,1},{x,3}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {make_fun2,{f,668},0,0,3}.
    {line,[{location,"init.erl",788}]}.
    {call_ext_only,1,{extfunc,erlang,spawn_link,1}}.


{function, do_boot, 3, 324}.
  {label,323}.
    {line,[{location,"init.erl",790}]}.
    {func_info,{atom,init},{atom,do_boot},3}.
  {label,324}.
    {allocate_zero,11,3}.
    {move,{x,0},{y,10}}.
    {move,{x,1},{y,9}}.
    {move,{atom,true},{x,1}}.
    {move,{x,2},{y,8}}.
    {move,{atom,trap_exit},{x,0}}.
    {line,[{location,"init.erl",791}]}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{y,9},{x,0}}.
    {line,[{location,"init.erl",792}]}.
    {call,1,{f,332}}.
    {move,{x,0},{y,7}}.
    {move,{y,9},{x,1}}.
    {move,{atom,false},{x,2}}.
    {move,{atom,path},{x,0}}.
    {line,[{location,"init.erl",793}]}.
    {call,3,{f,515}}.
    {move,{x,0},{y,6}}.
    {move,{y,9},{x,0}}.
    {line,[{location,"init.erl",794}]}.
    {call,1,{f,346}}.
    {test,is_tuple,{f,330},[{x,0}]}.
    {test,test_arity,{f,330},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{y,5}}.
    {get_tuple_element,{x,0},1,{y,4}}.
    {move,{x,0},{y,3}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"init.erl",795}]}.
    {call,1,{f,16}}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,2}}.
    {kill,{y,3}}.
    {move,{y,10},{x,0}}.
    {line,[{location,"init.erl",795}]}.
    {call,3,{f,310}}.
    {move,{y,7},{x,1}}.
    {move,{y,9},{x,0}}.
    {line,[{location,"init.erl",796}]}.
    {call,2,{f,344}}.
    {move,{y,7},{x,1}}.
    {line,[{location,"init.erl",797}]}.
    {call,2,{f,348}}.
    {move,{x,0},{y,3}}.
    {move,{y,9},{x,1}}.
    {move,{atom,false},{x,2}}.
    {move,{atom,mode},{x,0}}.
    {line,[{location,"init.erl",798}]}.
    {call,3,{f,510}}.
    {line,[{location,"init.erl",798}]}.
    {call,1,{f,71}}.
    {move,{x,0},{y,2}}.
    {move,{y,9},{x,1}}.
    {move,{atom,false},{x,2}}.
    {move,{atom,init_debug},{x,0}}.
    {line,[{location,"init.erl",799}]}.
    {call,3,{f,510}}.
    {line,[{location,"init.erl",799}]}.
    {call,1,{f,71}}.
    {test_heap,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,init_debug_flag}}.
    {put,{y,0}}.
    {move,{atom,init__boot__on_load_handler},{x,0}}.
    {'try',{y,1},{f,325}}.
    {line,[{location,"init.erl",800}]}.
    send.
  {label,325}.
    {try_end,{y,1}}.
    {move,{y,9},{x,1}}.
    {move,{y,7},{x,0}}.
    {kill,{y,7}}.
    {line,[{location,"init.erl",801}]}.
    {call,2,{f,335}}.
    {move,{x,0},{y,7}}.
    {line,[{location,"init.erl",803}]}.
    {call,0,{f,81}}.
    {test_heap,11,1}.
    {put_tuple,10,{x,1}}.
    {put,{atom,es}}.
    {put,{y,10}}.
    {put,{y,0}}.
    {put,{y,6}}.
    {put,{y,5}}.
    {put,{y,4}}.
    {put,{x,0}}.
    {put,{atom,true}}.
    {put,{y,2}}.
    {put,{y,7}}.
    {move,{y,3},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {kill,{y,5}}.
    {kill,{y,6}}.
    {kill,{y,7}}.
    {kill,{y,10}}.
    {line,[{location,"init.erl",808}]}.
    {call,2,{f,359}}.
    {'try',{y,10},{f,326}}.
    {bif,node,{f,0},[],{x,0}}.
    {line,[{location,"init.erl",812}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"Node: "},{x,0}}.
    {line,[{location,"init.erl",812}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,purify}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",812}]}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
  {label,326}.
    {try_end,{y,10}}.
    {move,{y,8},{x,0}}.
    {kill,{y,8}}.
    {line,[{location,"init.erl",814}]}.
    {call,1,{f,434}}.
    {move,{y,9},{x,1}}.
    {move,{atom,false},{x,2}}.
    {kill,{y,9}}.
    {move,{atom,profile_boot},{x,0}}.
    {line,[{location,"init.erl",815}]}.
    {call,3,{f,510}}.
    {line,[{location,"init.erl",815}]}.
    {call,1,{f,71}}.
    {test,is_atom,{f,329},[{x,0}]}.
    {select_val,{x,0},
                {f,329},
                {list,[{atom,false},{f,328},{atom,true},{f,327}]}}.
  {label,327}.
    {line,[{location,"init.erl",818}]}.
    {call,0,{f,587}}.
    {line,[{location,"init.erl",818}]}.
    {call,1,{f,589}}.
    {line,[{location,"init.erl",819}]}.
    {call,0,{f,585}}.
  {label,328}.
    {move,{atom,ok},{x,0}}.
    {deallocate,11}.
    return.
  {label,329}.
    {line,[{location,"init.erl",815}]}.
    {case_end,{x,0}}.
  {label,330}.
    {line,[{location,"init.erl",794}]}.
    {badmatch,{x,0}}.


{function, get_root, 1, 332}.
  {label,331}.
    {line,[{location,"init.erl",823}]}.
    {func_info,{atom,init},{atom,get_root},1}.
  {label,332}.
    {allocate,0,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,root},{x,0}}.
    {line,[{location,"init.erl",824}]}.
    {call,2,{f,531}}.
    {test,is_tagged_tuple,{f,333},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_nonempty_list,{f,333},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,333},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nil,{f,333},[{x,6}]}.
    {test,is_nil,{f,333},[{x,4}]}.
    {move,{x,5},{x,0}}.
    {deallocate,0}.
    return.
  {label,333}.
    {move,{atom,no_or_multiple_root_variables},{x,0}}.
    {line,[{location,"init.erl",828}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.


{function, get_boot_vars, 2, 335}.
  {label,334}.
    {line,[{location,"init.erl",831}]}.
    {func_info,{atom,init},{atom,get_boot_vars},2}.
  {label,335}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{literal,#{}},{x,0}}.
    {line,[{location,"init.erl",832}]}.
    {call,2,{f,338}}.
    {test,is_map,{f,336},[{x,0}]}.
    {line,[{location,"init.erl",834}]}.
    {put_map_assoc,{f,0},{x,0},{x,0},1,{list,[{literal,<<"ROOT">>},{y,0}]}}.
    {deallocate,1}.
    return.
  {label,336}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,badmap}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",834}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, get_boot_vars_1, 2, 338}.
  {label,337}.
    {line,[{location,"init.erl",836}]}.
    {func_info,{atom,init},{atom,get_boot_vars_1},2}.
  {label,338}.
    {test,is_nonempty_list,{f,340},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_tagged_tuple,{f,339},[{x,2},2,{atom,boot_var}]}.
    {move,nil,{x,4}}.
    {get_tuple_element,{x,2},1,{x,5}}.
    {test,is_nonempty_list,{f,342},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,342},[{x,7}]}.
    {get_list,{x,7},{x,8},{x,9}}.
    {test,is_nil,{f,342},[{x,9}]}.
    {test,is_map,{f,341},[{x,0}]}.
    {line,[{location,"init.erl",837}]}.
    {put_map_assoc,{f,0},{x,0},{x,0},9,{list,[{x,6},{x,8}]}}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,338}}.
  {label,339}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,338}}.
  {label,340}.
    {test,is_nil,{f,337},[{x,1}]}.
    return.
  {label,341}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,badmap}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",837}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,342}.
    {move,{atom,invalid_boot_var_argument},{x,0}}.
    {line,[{location,"init.erl",839}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.


{function, bootfile, 2, 344}.
  {label,343}.
    {line,[{location,"init.erl",845}]}.
    {func_info,{atom,init},{atom,bootfile},2}.
  {label,344}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {move,{literal,"/bin/start"},{x,1}}.
    {line,[{location,"init.erl",846}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,1,0}.
    {move,{atom,boot},{x,0}}.
    {line,[{location,"init.erl",846}]}.
    {call,3,{f,510}}.
    {call_last,1,{f,74},0}.


{function, path_flags, 1, 346}.
  {label,345}.
    {line,[{location,"init.erl",848}]}.
    {func_info,{atom,init},{atom,path_flags},1}.
  {label,346}.
    {allocate,1,1}.
    {move,{x,0},{x,1}}.
    {move,{x,1},{y,0}}.
    {move,{atom,pa},{x,0}}.
    {line,[{location,"init.erl",849}]}.
    {call,2,{f,518}}.
    {line,[{location,"init.erl",849}]}.
    {call,1,{f,546}}.
    {line,[{location,"init.erl",849}]}.
    {call,1,{f,542}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{atom,pz},{x,0}}.
    {line,[{location,"init.erl",850}]}.
    {call,2,{f,518}}.
    {line,[{location,"init.erl",850}]}.
    {call,1,{f,542}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",851}]}.
    {call,1,{f,16}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",851}]}.
    {call,1,{f,16}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.


{function, get_boot, 2, 348}.
  {label,347}.
    {line,[{location,"init.erl",853}]}.
    {func_info,{atom,init},{atom,get_boot},2}.
  {label,348}.
    {allocate_zero,2,2}.
    {move,{x,1},{y,1}}.
    {move,{literal,".boot"},{x,1}}.
    {line,[{location,"init.erl",854}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",855}]}.
    {call,1,{f,355}}.
    {test,is_tuple,{f,349},[{x,0}]}.
    {test,test_arity,{f,353},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,353},[{x,1},{atom,ok}]}.
    {jump,{f,350}}.
  {label,349}.
    {test,is_eq_exact,{f,353},[{x,0},{atom,not_found}]}.
    {move,{y,0},{x,1}}.
    {move,{literal,"/bin/"},{x,0}}.
    {line,[{location,"init.erl",859}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",859}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",860}]}.
    {call,1,{f,355}}.
    {test,is_tuple,{f,351},[{x,0}]}.
    {test,test_arity,{f,352},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,352},[{x,1},{atom,ok}]}.
  {label,350}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {deallocate,2}.
    return.
  {label,351}.
    {test,is_eq_exact,{f,352},[{x,0},{atom,not_found}]}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",864}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,'cannot get bootfile'}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",864}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,352}.
    {move,{y,1},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",866}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,'bootfile format error'}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",866}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,353}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",869}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,'bootfile format error'}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",869}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.


{function, get_boot, 1, 355}.
  {label,354}.
    {line,[{location,"init.erl",872}]}.
    {func_info,{atom,init},{atom,get_boot},1}.
  {label,355}.
    {allocate_zero,1,1}.
    {line,[{location,"init.erl",873}]}.
    {call_ext,1,{extfunc,erl_prim_loader,get_file,1}}.
    {test,is_tagged_tuple,{f,357},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"init.erl",875}]}.
    {call_ext,1,{extfunc,erlang,binary_to_term,1}}.
    {test,is_tagged_tuple,{f,356},[{x,0},3,{atom,script}]}.
    {move,nil,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_list,{f,356},[{x,3}]}.
    {test_heap,6,4}.
    {bif,self,{f,0},[],{x,0}}.
    {move,{x,3},{y,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,script_id}}.
    {put,{x,2}}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{x,4}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",877}]}.
    send.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,356}.
    {move,{atom,error},{x,0}}.
    {deallocate,1}.
    return.
  {label,357}.
    {move,{atom,not_found},{x,0}}.
    {deallocate,1}.
    return.


{function, eval_script, 2, 359}.
  {label,358}.
    {line,[{location,"init.erl",893}]}.
    {func_info,{atom,init},{atom,eval_script},2}.
  {label,359}.
    {test,is_nonempty_list,{f,373},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,374},[{x,2}]}.
    {select_tuple_arity,{x,2},{f,374},{list,[1,{f,360},2,{f,363},3,{f,372}]}}.
  {label,360}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_eq_exact,{f,374},[{x,4},{atom,kernel_load_completed}]}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,5}}.
    {test,is_eq_exact,{f,374},[{x,5},{atom,es}]}.
    {allocate,1,4}.
    {get_tuple_element,{x,1},8,{x,6}}.
    {move,{x,3},{y,0}}.
    {test,is_eq_exact,{f,361},[{x,6},{atom,embedded}]}.
    {move,{x,1},{x,0}}.
    {jump,{f,362}}.
  {label,361}.
    {move,{atom,false},{x,2}}.
    {move,{integer,8},{x,0}}.
    {line,[{location,"init.erl",912}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
  {label,362}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,359},1}.
  {label,363}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {get_tuple_element,{x,2},1,{x,5}}.
    {test,is_atom,{f,374},[{x,4}]}.
    {select_val,{x,4},
                {f,374},
                {list,[{atom,apply},
                       {f,364},
                       {atom,preLoaded},
                       {f,365},
                       {atom,path},
                       {f,366},
                       {atom,progress},
                       {f,368},
                       {atom,primLoad},
                       {f,369}]}}.
  {label,364}.
    {test,is_tuple,{f,374},[{x,5}]}.
    {test,test_arity,{f,374},[{x,5},3]}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,5},0,{x,6}}.
    {get_tuple_element,{x,5},1,{x,7}}.
    {get_tuple_element,{x,5},2,{x,8}}.
    {get_tuple_element,{x,1},0,{x,9}}.
    {test,is_eq_exact,{f,374},[{x,9},{atom,es}]}.
    {allocate,5,9}.
    {get_tuple_element,{x,1},2,{x,0}}.
    {move,{x,1},{y,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,8},{y,0}}.
    {move,{x,7},{y,1}}.
    {move,{x,6},{y,2}}.
    {move,{x,3},{y,4}}.
    {line,[{location,"init.erl",931}]}.
    {call,2,{f,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,2},{x,0}}.
    {trim,3,2}.
    {line,[{location,"init.erl",932}]}.
    {call_ext,3,{extfunc,erlang,apply,3}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,359},2}.
  {label,365}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,6}}.
    {test,is_eq_exact,{f,374},[{x,6},{atom,es}]}.
    {jump,{f,367}}.
  {label,366}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,6}}.
    {test,is_eq_exact,{f,374},[{x,6},{atom,es}]}.
    {get_tuple_element,{x,1},3,{x,7}}.
    {test,is_eq_exact,{f,367},[{x,7},{atom,false}]}.
    {allocate,3,6}.
    {get_tuple_element,{x,1},4,{x,0}}.
    {get_tuple_element,{x,1},6,{y,0}}.
    {get_tuple_element,{x,1},9,{x,11}}.
    {move,{x,3},{y,2}}.
    {move,{x,1},{y,1}}.
    {move,{x,5},{x,2}}.
    {get_tuple_element,{x,1},5,{x,1}}.
    {move,{x,11},{x,3}}.
    {line,[{location,"init.erl",902}]}.
    {call,4,{f,387}}.
    {move,{y,0},{x,1}}.
    {trim,1,2}.
    {line,[{location,"init.erl",903}]}.
    {call,2,{f,402}}.
    {line,[{location,"init.erl",904}]}.
    {call_ext,1,{extfunc,erl_prim_loader,set_path,1}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,359},2}.
  {label,367}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,359}}.
  {label,368}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,6}}.
    {test,is_eq_exact,{f,374},[{x,6},{atom,es}]}.
    {allocate,3,6}.
    {get_tuple_element,{x,1},2,{x,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,2},{x,1}}.
    {move,{x,5},{y,0}}.
    {move,{x,3},{y,2}}.
    {line,[{location,"init.erl",894}]}.
    {call,2,{f,2}}.
    {test_heap,4,0}.
    {bif,self,{f,0},[],{x,0}}.
    {put_tuple,3,{x,1}}.
    {put,{x,0}}.
    {put,{atom,progress}}.
    {put,{y,0}}.
    {trim,1,2}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",895}]}.
    send.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,359},2}.
  {label,369}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,6}}.
    {test,is_eq_exact,{f,374},[{x,6},{atom,es}]}.
    {test,is_list,{f,374},[{x,5}]}.
    {allocate,2,6}.
    {get_tuple_element,{x,1},1,{x,7}}.
    {get_tuple_element,{x,1},7,{x,8}}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{y,1}}.
    {test,is_atom,{f,375},[{x,8}]}.
    {select_val,{x,8},
                {f,375},
                {list,[{atom,true},{f,370},{atom,false},{f,371}]}}.
  {label,370}.
    {move,{x,7},{x,1}}.
    {move,{x,5},{x,0}}.
    {line,[{location,"init.erl",919}]}.
    {call,2,{f,377}}.
  {label,371}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,359},2}.
  {label,372}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_eq_exact,{f,374},[{x,4},{atom,kernelProcess}]}.
    {get_tuple_element,{x,2},1,{x,5}}.
    {get_tuple_element,{x,2},2,{x,6}}.
    {test,is_tuple,{f,374},[{x,6}]}.
    {test,test_arity,{f,374},[{x,6},3]}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,6},0,{x,7}}.
    {get_tuple_element,{x,6},1,{x,8}}.
    {get_tuple_element,{x,6},2,{x,9}}.
    {get_tuple_element,{x,1},0,{x,10}}.
    {test,is_eq_exact,{f,374},[{x,10},{atom,es}]}.
    {allocate_heap,7,3,10}.
    {get_tuple_element,{x,1},1,{y,0}}.
    {get_tuple_element,{x,1},2,{x,0}}.
    {move,{x,1},{y,6}}.
    {move,{x,3},{y,5}}.
    {move,{x,5},{y,4}}.
    {move,{x,9},{y,3}}.
    {move,{x,8},{y,2}}.
    {move,{x,7},{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,start}}.
    {put,{x,5}}.
    {line,[{location,"init.erl",927}]}.
    {call,2,{f,2}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,3}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,4}}.
    {move,{y,4},{x,0}}.
    {trim,5,2}.
    {line,[{location,"init.erl",928}]}.
    {call,5,{f,427}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,359},2}.
  {label,373}.
    {test,is_nil,{f,374},[{x,0}]}.
    {test,is_tuple,{f,358},[{x,1}]}.
    {test,test_arity,{f,374},[{x,1},10]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {test,is_eq_exact,{f,374},[{x,2},{atom,es}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,374}.
    {test,is_tagged_tuple,{f,358},[{x,1},10,{atom,es}]}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,'unexpected command in bootfile'}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",937}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,375}.
    {line,[{location,"init.erl",917}]}.
    {case_end,{x,8}}.


{function, load_modules, 2, 377}.
  {label,376}.
    {line,[{location,"init.erl",939}]}.
    {func_info,{atom,init},{atom,load_modules},2}.
  {label,377}.
    {allocate_zero,2,2}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",940}]}.
    {call,1,{f,662}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",941}]}.
    {call,0,{f,385}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",942}]}.
    {call_ext,2,{extfunc,erl_prim_loader,get_modules,2}}.
    {test,is_tagged_tuple,{f,380},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,380},[{x,2}]}.
    {test,test_arity,{f,380},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {test,is_nonempty_list,{f,378},[{x,4}]}.
    {kill,{y,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",951}]}.
    {call,1,{f,646}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,load_failed}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",952}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,378}.
    {test,is_nil,{f,380},[{x,4}]}.
    {move,{x,3},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",944}]}.
    {call,1,{f,658}}.
    {line,[{location,"init.erl",945}]}.
    {call_ext,1,{extfunc,erlang,finish_loading,1}}.
    {test,is_eq_exact,{f,379},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",946}]}.
    {call,1,{f,654}}.
    {test_heap,4,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,3,{x,2}}.
    {put,{x,1}}.
    {put,{atom,loaded}}.
    {put,{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",947}]}.
    send.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",948}]}.
    {call,1,{f,650}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,382},1}.
  {label,379}.
    {line,[{location,"init.erl",945}]}.
    {badmatch,{x,0}}.
  {label,380}.
    {line,[{location,"init.erl",942}]}.
    {case_end,{x,0}}.


{function, load_rest, 2, 382}.
  {label,381}.
    {line,[{location,"init.erl",955}]}.
    {func_info,{atom,init},{atom,load_rest},2}.
  {label,382}.
    {test,is_nonempty_list,{f,383},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,381},[{x,2}]}.
    {test,test_arity,{f,381},[{x,2},3]}.
    {allocate,4,4}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},2,{y,0}}.
    {move,{x,1},{y,2}}.
    {get_tuple_element,{x,2},1,{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{x,3},{y,3}}.
    {line,[{location,"init.erl",956}]}.
    {call,2,{f,451}}.
    {test_heap,9,0}.
    {bif,self,{f,0},[],{x,0}}.
    {put_tuple,2,{x,2}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_tuple,3,{x,1}}.
    {put,{x,0}}.
    {put,{atom,loaded}}.
    {put,{x,2}}.
    {trim,2,2}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",957}]}.
    send.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,382},2}.
  {label,383}.
    {test,is_nil,{f,381},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, prepare_loading_fun, 0, 385}.
  {label,384}.
    {line,[{location,"init.erl",962}]}.
    {func_info,{atom,init},{atom,prepare_loading_fun},0}.
  {label,385}.
    {make_fun2,{f,640},0,0,0}.
    return.


{function, make_path, 4, 387}.
  {label,386}.
    {line,[{location,"init.erl",977}]}.
    {func_info,{atom,init},{atom,make_path},4}.
  {label,387}.
    {allocate,2,4}.
    {move,{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",978}]}.
    {call,2,{f,389}}.
    {test_heap,4,1}.
    {put_list,{y,0},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",978}]}.
    {call,1,{f,542}}.
    {test_heap,4,1}.
    {put_list,{x,0},nil,{x,1}}.
    {put_list,{y,0},{x,1},{x,0}}.
    {call_last,1,{f,542},1}.


{function, fix_path, 2, 389}.
  {label,388}.
    {line,[{location,"init.erl",984}]}.
    {func_info,{atom,init},{atom,fix_path},2}.
  {label,389}.
    {test,is_nonempty_list,{f,391},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_atom,{f,390},[{x,2}]}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",985}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{y,0},{x,1}}.
    {line,[{location,"init.erl",985}]}.
    {call,2,{f,393}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"init.erl",985}]}.
    {call,2,{f,389}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,390}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",987}]}.
    {call,2,{f,393}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"init.erl",987}]}.
    {call,2,{f,389}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,391}.
    {move,nil,{x,0}}.
    return.


{function, add_var, 2, 393}.
  {label,392}.
    {line,[{location,"init.erl",991}]}.
    {func_info,{atom,init},{atom,add_var},2}.
  {label,393}.
    {test,is_nonempty_list,{f,395},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_eq_exact,{f,395},[{x,2},{integer,36}]}.
    {allocate_zero,3,4}.
    {move,{x,1},{y,2}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",992}]}.
    {call,2,{f,398}}.
    {test,is_tuple,{f,396},[{x,0}]}.
    {test,test_arity,{f,396},[{x,0},2]}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {get_tuple_element,{x,0},0,{y,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",993}]}.
    {call_ext,1,{extfunc,erlang,list_to_binary,1}}.
    {test,is_map,{f,394},[{y,2}]}.
    {get_map_elements,{f,394},{y,2},{list,[{x,0},{x,1}]}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",996}]}.
    {call,1,{f,74}}.
    {test_heap,2,1}.
    {put_list,{integer,47},{y,0},{x,1}}.
    {line,[{location,"init.erl",997}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},3}.
  {label,394}.
    {move,{literal," in bootfile"},{x,1}}.
    {move,{y,1},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {line,[{location,"init.erl",999}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"cannot expand $"},{x,0}}.
    {line,[{location,"init.erl",999}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{location,"init.erl",1000}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {line,[{location,"init.erl",1001}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,395}.
    return.
  {label,396}.
    {line,[{location,"init.erl",992}]}.
    {badmatch,{x,0}}.


{function, extract_var, 2, 398}.
  {label,397}.
    {line,[{location,"init.erl",1006}]}.
    {func_info,{atom,init},{atom,extract_var},2}.
  {label,398}.
    {test,is_nonempty_list,{f,400},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_eq_exact,{f,399},[{x,2},{integer,47}]}.
    {allocate,1,4}.
    {move,{x,3},{y,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1006}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,399}.
    {test_heap,2,4}.
    {put_list,{x,2},{x,1},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,398}}.
  {label,400}.
    {test,is_nil,{f,397},[{x,0}]}.
    {allocate,0,2}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1008}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,nil}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.


{function, patch_path, 2, 402}.
  {label,401}.
    {line,[{location,"init.erl",1010}]}.
    {func_info,{atom,init},{atom,patch_path},2}.
  {label,402}.
    {test,is_atom,{f,401},[{x,1}]}.
    {select_val,{x,1},
                {f,401},
                {list,[{atom,relaxed},{f,403},{atom,strict},{f,404}]}}.
  {label,403}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",1013}]}.
    {call,0,{f,553}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,636},1}.
  {label,404}.
    return.


{function, patch_dir, 2, 406}.
  {label,405}.
    {line,[{location,"init.erl",1016}]}.
    {func_info,{atom,init},{atom,patch_dir},2}.
  {label,406}.
    {allocate_zero,5,2}.
    {move,{x,1},{y,3}}.
    {move,{integer,47},{x,1}}.
    {move,{x,0},{y,4}}.
    {line,[{location,"init.erl",1017}]}.
    {call,2,{f,412}}.
    {test,is_nonempty_list,{f,410},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_eq_exact,{f,410},[{x,1},{literal,"nibe"}]}.
    {test,is_nonempty_list,{f,410},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,410},[{x,4}]}.
    {get_list,{x,4},{y,0},{y,2}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",1019}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,2}}.
    {move,{integer,46},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",1020}]}.
    {call,2,{f,418}}.
    {test,is_tuple,{f,407},[{x,0}]}.
    {test,test_arity,{f,407},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,407},[{x,1},{y,3}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,407},[{x,2},{y,0}]}.
    {move,{y,2},{x,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {line,[{location,"init.erl",1023}]}.
    {call,1,{f,633}}.
    {line,[{location,"init.erl",1023}]}.
    {call,1,{f,546}}.
    {test_heap,2,1}.
    {put_list,{y,0},{literal,["ebin"]},{x,1}}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",1024}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{literal,"/"},{x,1}}.
    {line,[{location,"init.erl",1024}]}.
    {call,2,{f,424}}.
    {move,{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {jump,{f,408}}.
  {label,407}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {line,[{location,"init.erl",1028}]}.
    {call,1,{f,630}}.
    {line,[{location,"init.erl",1028}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{x,2},{y,3}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",1029}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{y,0},{literal,["ebin"]},{x,2}}.
    {put_list,{x,0},{x,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,3}}.
    {line,[{location,"init.erl",1029}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{literal,"/"},{x,1}}.
    {line,[{location,"init.erl",1029}]}.
    {call,2,{f,424}}.
    {move,{y,4},{x,1}}.
  {label,408}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{y,2}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1033}]}.
    {call_ext,1,{extfunc,erl_prim_loader,read_file_info,1}}.
    {test,is_tagged_tuple,{f,409},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tagged_tuple,{f,409},[{x,2},14,{atom,file_info}]}.
    {get_tuple_element,{x,2},2,{x,4}}.
    {test,is_eq_exact,{f,409},[{x,4},{atom,directory}]}.
    {move,{y,2},{x,0}}.
    {deallocate,5}.
    return.
  {label,409}.
    {kill,{y,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"init.erl",1037}]}.
    {call_ext,1,{extfunc,erl_prim_loader,read_file_info,1}}.
    {test,is_tagged_tuple,{f,410},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tagged_tuple,{f,410},[{x,2},14,{atom,file_info}]}.
    {get_tuple_element,{x,2},2,{x,4}}.
    {test,is_eq_exact,{f,410},[{x,4},{atom,directory}]}.
    {move,{y,3},{x,0}}.
    {deallocate,5}.
    return.
  {label,410}.
    {move,{y,4},{x,0}}.
    {deallocate,5}.
    return.


{function, funny_split, 2, 412}.
  {label,411}.
    {line,[{location,"init.erl",1049}]}.
    {func_info,{atom,init},{atom,funny_split},2}.
  {label,412}.
    {move,nil,{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,414}}.


{function, funny_split, 4, 414}.
  {label,413}.
    {line,[{location,"init.erl",1052}]}.
    {func_info,{atom,init},{atom,funny_split},4}.
  {label,414}.
    {test,is_nonempty_list,{f,416},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_eq_exact,{f,415},[{x,1},{x,4}]}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,3},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,414}}.
  {label,415}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,414}}.
  {label,416}.
    {test,is_nil,{f,413},[{x,0}]}.
    {test_heap,2,4}.
    {put_list,{x,2},{x,3},{x,0}}.
    return.


{function, funny_splitwith, 2, 418}.
  {label,417}.
    {line,[{location,"init.erl",1060}]}.
    {func_info,{atom,init},{atom,funny_splitwith},2}.
  {label,418}.
    {move,{x,0},{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,420}}.


{function, funny_splitwith, 4, 420}.
  {label,419}.
    {line,[{location,"init.erl",1063}]}.
    {func_info,{atom,init},{atom,funny_splitwith},4}.
  {label,420}.
    {test,is_nonempty_list,{f,422},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_eq_exact,{f,421},[{x,1},{x,4}]}.
    {test_heap,3,6}.
    {put_tuple,2,{x,0}}.
    {put,{x,2}}.
    {put,{x,5}}.
    return.
  {label,421}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,420}}.
  {label,422}.
    {test,is_nil,{f,419},[{x,0}]}.
    {test_heap,3,4}.
    {put_tuple,2,{x,0}}.
    {put,nil}.
    {put,{x,3}}.
    return.


{function, join, 2, 424}.
  {label,423}.
    {line,[{location,"init.erl",1071}]}.
    {func_info,{atom,init},{atom,join},2}.
  {label,424}.
    {test,is_nonempty_list,{f,423},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,425},[{x,3}]}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",1072}]}.
    {call,2,{f,424}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",1072}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",1072}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,425}.
    {test,is_nil,{f,423},[{x,3}]}.
    {move,{x,2},{x,0}}.
    return.


{function, start_in_kernel, 5, 427}.
  {label,426}.
    {line,[{location,"init.erl",1079}]}.
    {func_info,{atom,init},{atom,start_in_kernel},5}.
  {label,427}.
    {allocate,2,5}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{y,1}}.
    {line,[{location,"init.erl",1080}]}.
    {call_ext,3,{extfunc,erlang,apply,3}}.
    {test_heap,7,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {put_tuple,3,{x,3}}.
    {put,{x,1}}.
    {put,{atom,started}}.
    {put,{x,2}}.
    {move,{x,3},{x,1}}.
    {kill,{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",1081}]}.
    send.
    {line,[{location,"init.erl",1082}]}.
  {label,428}.
    {loop_rec,{f,432},{x,0}}.
    {test,is_tuple,{f,431},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,431},{list,[2,{f,429},3,{f,430}]}}.
  {label,429}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,431},[{x,2},{atom,ignore}]}.
    {test,is_eq_exact,{f,431},[{x,1},{y,1}]}.
    remove_message.
    {move,{atom,ignore},{x,0}}.
    {deallocate,2}.
    return.
  {label,430}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,431},[{x,2},{atom,ok}]}.
    {test,is_eq_exact,{f,431},[{x,1},{y,1}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    remove_message.
    {trim,2,0}.
    {line,[{location,"init.erl",1084}]}.
    {call_ext,1,{extfunc,erlang,unlink,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,431}.
    {loop_rec_end,{f,428}}.
  {label,432}.
    {wait,{f,428}}.


{function, start_em, 1, 434}.
  {label,433}.
    {line,[{location,"init.erl",1099}]}.
    {func_info,{atom,init},{atom,start_em},1}.
  {label,434}.
    {test,is_nonempty_list,{f,436},[{x,0}]}.
    {allocate,2,1}.
    {get_list,{x,0},{y,0},{y,1}}.
    {move,{atom,user},{x,0}}.
    {line,[{location,"init.erl",1100}]}.
    {call_ext,1,{extfunc,erlang,whereis,1}}.
    {test,is_ne_exact,{f,435},[{x,0},{atom,undefined}]}.
    {test,is_pid,{f,437},[{x,0}]}.
    {bif,self,{f,0},[],{x,1}}.
    {line,[{location,"init.erl",1104}]}.
    {call_ext,2,{extfunc,erlang,group_leader,2}}.
  {label,435}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",1106}]}.
    {call,1,{f,439}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,434},1}.
  {label,436}.
    {test,is_nil,{f,433},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,437}.
    {line,[{location,"init.erl",1100}]}.
    {case_end,{x,0}}.


{function, start_it, 1, 439}.
  {label,438}.
    {line,[{location,"init.erl",1110}]}.
    {func_info,{atom,init},{atom,start_it},1}.
  {label,439}.
    {test,is_nonempty_list,{f,442},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,441},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,440},[{x,4}]}.
    {allocate,0,4}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {line,[{location,"init.erl",1125}]}.
    {apply_last,0,0}.
  {label,440}.
    {allocate,0,5}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",1126}]}.
    {apply_last,1,0}.
  {label,441}.
    {test,is_nil,{f,446},[{x,2}]}.
    {allocate,0,2}.
    {move,{x,1},{x,0}}.
    {move,{atom,start},{x,1}}.
    {line,[{location,"init.erl",1124}]}.
    {apply_last,0,0}.
  {label,442}.
    {test,is_tuple,{f,445},[{x,0}]}.
    {test,test_arity,{f,438},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,438},[{x,1},{atom,eval}]}.
    {allocate_zero,1,1}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"init.erl",1113}]}.
    {call,1,{f,74}}.
    {line,[{location,"init.erl",1114}]}.
    {call_ext,1,{extfunc,erl_scan,string,1}}.
    {test,is_tagged_tuple,{f,449},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",1115}]}.
    {call,1,{f,546}}.
    {test,is_nonempty_list,{f,443},[{x,0}]}.
    {get_hd,{x,0},{x,1}}.
    {test,is_tagged_tuple,{f,443},[{x,1},2,{atom,dot}]}.
    {move,{y,0},{x,0}}.
    {jump,{f,444}}.
  {label,443}.
    {move,{x,0},{y,0}}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"init.erl",1117}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,dot}}.
    {put,{x,0}}.
    {put_list,{x,1},{y,0},{x,0}}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",1117}]}.
    {call,1,{f,546}}.
  {label,444}.
    {kill,{y,0}}.
    {line,[{location,"init.erl",1119}]}.
    {call_ext,1,{extfunc,erl_parse,parse_exprs,1}}.
    {test,is_tagged_tuple,{f,448},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {line,[{location,"init.erl",1120}]}.
    {call_ext,0,{extfunc,erl_eval,new_bindings,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"init.erl",1120}]}.
    {call_ext,2,{extfunc,erl_eval,exprs,2}}.
    {test,is_tagged_tuple,{f,447},[{x,0},3,{atom,value}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,445}.
    {test,is_nil,{f,438},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,446}.
    {line,[{location,"init.erl",1123}]}.
    {case_end,{x,0}}.
  {label,447}.
    {line,[{location,"init.erl",1120}]}.
    {badmatch,{x,0}}.
  {label,448}.
    {line,[{location,"init.erl",1119}]}.
    {badmatch,{x,0}}.
  {label,449}.
    {line,[{location,"init.erl",1114}]}.
    {badmatch,{x,0}}.


{function, do_load_module, 2, 451}.
  {label,450}.
    {line,[{location,"init.erl",1131}]}.
    {func_info,{atom,init},{atom,do_load_module},2}.
  {label,451}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",1132}]}.
    {call_ext,2,{extfunc,erlang,load_module,2}}.
    {test,is_tuple,{f,454},[{x,0}]}.
    {test,test_arity,{f,454},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,454},[{x,1}]}.
    {select_val,{x,1},
                {f,454},
                {list,[{atom,module},{f,452},{atom,error},{f,453}]}}.
  {label,452}.
    {test,is_eq_exact,{f,454},[{x,2},{y,0}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,453}.
    {test,is_eq_exact,{f,454},[{x,2},{atom,on_load}]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,loaded}}.
    {put,{y,0}}.
    {trim,1,0}.
    {move,{atom,init__boot__on_load_handler},{x,0}}.
    {line,[{location,"init.erl",1136}]}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,454}.
    {move,{atom,error},{x,0}}.
    {deallocate,1}.
    return.


{function, shutdown_timer, 1, 456}.
  {label,455}.
    {line,[{location,"init.erl",1149}]}.
    {func_info,{atom,init},{atom,shutdown_timer},1}.
  {label,456}.
    {allocate_zero,1,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,infinity},{x,2}}.
    {move,{atom,shutdown_time},{x,0}}.
    {line,[{location,"init.erl",1150}]}.
    {call,3,{f,510}}.
    {test,is_ne_exact,{f,461},[{x,0},{atom,infinity}]}.
    {'catch',{y,0},{f,457}}.
    {line,[{location,"init.erl",1154}]}.
    {call_ext,1,{extfunc,erlang,binary_to_list,1}}.
    {line,[{location,"init.erl",1154}]}.
    {call_ext,1,{extfunc,erlang,list_to_integer,1}}.
  {label,457}.
    {catch_end,{y,0}}.
    {test,is_integer,{f,461},[{x,0}]}.
    {make_fun2,{f,628},0,0,1}.
    {line,[{location,"init.erl",1156}]}.
    {call_ext,1,{extfunc,erlang,spawn,1}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",1157}]}.
  {label,458}.
    {loop_rec,{f,460},{x,0}}.
    {test,is_tuple,{f,459},[{x,0}]}.
    {test,test_arity,{f,459},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,459},[{x,2},{atom,started}]}.
    {test,is_eq_exact,{f,459},[{x,1},{y,0}]}.
    remove_message.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,459}.
    {loop_rec_end,{f,458}}.
  {label,460}.
    {wait,{f,458}}.
  {label,461}.
    {bif,self,{f,0},[],{x,0}}.
    {deallocate,1}.
    return.


{function, flush_timout, 1, 463}.
  {label,462}.
    {line,[{location,"init.erl",1166}]}.
    {func_info,{atom,init},{atom,flush_timout},1}.
  {label,463}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",1167}]}.
  {label,464}.
    {loop_rec,{f,466},{x,0}}.
    {test,is_tuple,{f,465},[{x,0}]}.
    {test,test_arity,{f,465},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,465},[{x,2},{atom,timeout}]}.
    {test,is_eq_exact,{f,465},[{x,1},{y,0}]}.
    remove_message.
    {move,{atom,true},{x,0}}.
    {deallocate,1}.
    return.
  {label,465}.
    {loop_rec_end,{f,464}}.
  {label,466}.
    timeout.
    {move,{atom,true},{x,0}}.
    {deallocate,1}.
    return.


{function, timer, 1, 468}.
  {label,467}.
    {line,[{location,"init.erl",1172}]}.
    {func_info,{atom,init},{atom,timer},1}.
  {label,468}.
    {allocate_heap,1,3,1}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{atom,started}}.
    {move,{x,2},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",1173}]}.
    send.
    {line,[{location,"init.erl",1174}]}.
  {label,469}.
    {wait_timeout,{f,469},{y,0}}.
    timeout.
    {test_heap,3,0}.
    {bif,self,{f,0},[],{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{atom,timeout}}.
    {move,{atom,init},{x,0}}.
    {line,[{location,"init.erl",1176}]}.
    send.
    {deallocate,1}.
    return.


{function, parse_boot_args, 1, 471}.
  {label,470}.
    {line,[{location,"init.erl",1184}]}.
    {func_info,{atom,init},{atom,parse_boot_args},1}.
  {label,471}.
    {move,nil,{x,2}}.
    {move,nil,{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,473}}.


{function, parse_boot_args, 4, 473}.
  {label,472}.
    {line,[{location,"init.erl",1187}]}.
    {func_info,{atom,init},{atom,parse_boot_args},4}.
  {label,473}.
    {test,is_nonempty_list,{f,481},[{x,0}]}.
    {allocate,5,4}.
    {get_list,{x,0},{x,0},{y,3}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,4}}.
    {line,[{location,"init.erl",1188}]}.
    {call,1,{f,488}}.
    {test,is_tuple,{f,474},[{x,0}]}.
    {test,test_arity,{f,486},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,486},[{x,1},{atom,flag}]}.
    {get_tuple_element,{x,0},1,{y,4}}.
    {move,nil,{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {line,[{location,"init.erl",1201}]}.
    {call,2,{f,499}}.
    {test,is_tuple,{f,482},[{x,0}]}.
    {test,test_arity,{f,482},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{y,4}}.
    {put,{x,1}}.
    {put_list,{x,4},{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {call_last,4,{f,473},5}.
  {label,474}.
    {test,is_atom,{f,486},[{x,0}]}.
    {select_val,{x,0},
                {f,486},
                {list,[{atom,arg},
                       {f,475},
                       {atom,end_args},
                       {f,476},
                       {atom,start_extra_arg},
                       {f,477},
                       {atom,eval_arg},
                       {f,478},
                       {atom,start_arg2},
                       {f,479},
                       {atom,start_arg},
                       {f,480}]}}.
  {label,475}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,0},{x,3}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,473},5}.
  {label,476}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,473},5}.
  {label,477}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {kill,{y,4}}.
    {line,[{location,"init.erl",1190}]}.
    {call,1,{f,546}}.
    {move,{x,0},{y,4}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",1190}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{x,2},{y,3}}.
    {move,{y,0},{x,0}}.
    {trim,3,2}.
    {line,[{location,"init.erl",1190}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,478}.
    {move,nil,{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {line,[{location,"init.erl",1198}]}.
    {call,2,{f,499}}.
    {test,is_tuple,{f,483},[{x,0}]}.
    {test,test_arity,{f,483},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,eval}}.
    {put,{x,1}}.
    {put_list,{x,4},{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,1},{x,2}}.
    {call_last,4,{f,473},5}.
  {label,479}.
    {move,nil,{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {line,[{location,"init.erl",1195}]}.
    {call,2,{f,499}}.
    {test,is_tuple,{f,484},[{x,0}]}.
    {test,test_arity,{f,484},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,run}}.
    {put,{x,1}}.
    {put_list,{x,4},{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,1},{x,2}}.
    {call_last,4,{f,473},5}.
  {label,480}.
    {move,nil,{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {line,[{location,"init.erl",1192}]}.
    {call,2,{f,499}}.
    {test,is_tuple,{f,485},[{x,0}]}.
    {test,test_arity,{f,485},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,s}}.
    {put,{x,1}}.
    {put_list,{x,4},{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,1},{x,2}}.
    {call_last,4,{f,473},5}.
  {label,481}.
    {test,is_nil,{f,472},[{x,0}]}.
    {allocate,2,4}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1210}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1210}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",1210}]}.
    {call,1,{f,546}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,482}.
    {line,[{location,"init.erl",1201}]}.
    {badmatch,{x,0}}.
  {label,483}.
    {line,[{location,"init.erl",1198}]}.
    {badmatch,{x,0}}.
  {label,484}.
    {line,[{location,"init.erl",1195}]}.
    {badmatch,{x,0}}.
  {label,485}.
    {line,[{location,"init.erl",1192}]}.
    {badmatch,{x,0}}.
  {label,486}.
    {line,[{location,"init.erl",1188}]}.
    {case_end,{x,0}}.


{function, check, 1, 488}.
  {label,487}.
    {line,[{location,"init.erl",1212}]}.
    {func_info,{atom,init},{atom,check},1}.
  {label,488}.
    {test,bs_start_match2,{f,497},1,[{x,0},1],{x,0}}.
    {test,bs_match_string,{f,497},[{x,0},8,{string,"-"}]}.
    {bs_save2,{x,0},0}.
    {test,bs_get_integer2,
          {f,496},
          1,
          [{x,0},
           {integer,8},
           1,
           {field_flags,[{anno,[1212,{file,"init.erl"}]},unsigned,big]}],
          {x,1}}.
    {select_val,{x,1},
                {f,495},
                {list,[{integer,101},
                       {f,489},
                       {integer,115},
                       {f,492},
                       {integer,45},
                       {f,493},
                       {integer,114},
                       {f,494}]}}.
  {label,489}.
    {test,bs_get_integer2,
          {f,495},
          2,
          [{x,0},
           {integer,8},
           1,
           {field_flags,[{anno,[1212,{file,"init.erl"}]},unsigned,big]}],
          {x,2}}.
    {select_val,{x,2},
                {f,495},
                {list,[{integer,120},{f,490},{integer,118},{f,491}]}}.
  {label,490}.
    {test,bs_match_string,{f,495},[{x,0},24,{string,"tra"}]}.
    {test,bs_test_tail2,{f,495},[{x,0},0]}.
    {move,{atom,start_extra_arg},{x,0}}.
    return.
  {label,491}.
    {test,bs_match_string,{f,495},[{x,0},16,{string,"al"}]}.
    {test,bs_test_tail2,{f,495},[{x,0},0]}.
    {move,{atom,eval_arg},{x,0}}.
    return.
  {label,492}.
    {test,bs_test_tail2,{f,495},[{x,0},0]}.
    {move,{atom,start_arg},{x,0}}.
    return.
  {label,493}.
    {test,bs_test_tail2,{f,495},[{x,0},0]}.
    {move,{atom,end_args},{x,0}}.
    return.
  {label,494}.
    {test,bs_match_string,{f,495},[{x,0},16,{string,"un"}]}.
    {test,bs_test_tail2,{f,495},[{x,0},0]}.
    {move,{atom,start_arg2},{x,0}}.
    return.
  {label,495}.
    {bs_restore2,{x,0},0}.
  {label,496}.
    {test,bs_get_binary2,
          {f,497},
          1,
          [{x,0},
           {atom,all},
           8,
           {field_flags,[{anno,[1217,{file,"init.erl"}]},unsigned,big]}],
          {x,0}}.
    {'%',{no_bin_opt,{{label,71},no_suitable_bs_start_match},
                     [1217,{file,"init.erl"}]}}.
    {allocate,0,1}.
    {line,[{location,"init.erl",1217}]}.
    {call,1,{f,71}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,flag}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,497}.
    {move,{atom,arg},{x,0}}.
    return.


{function, get_args, 2, 499}.
  {label,498}.
    {line,[{location,"init.erl",1220}]}.
    {func_info,{atom,init},{atom,get_args},2}.
  {label,499}.
    {test,is_nonempty_list,{f,507},[{x,0}]}.
    {allocate,4,2}.
    {get_list,{x,0},{y,3},{y,2}}.
    {move,{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"init.erl",1221}]}.
    {call,1,{f,488}}.
    {test,is_tuple,{f,500},[{x,0}]}.
    {test,test_arity,{f,508},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,508},[{x,1},{atom,flag}]}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1227}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,500}.
    {test,is_atom,{f,508},[{x,0}]}.
    {select_val,{x,0},
                {f,508},
                {list,[{atom,arg},
                       {f,501},
                       {atom,end_args},
                       {f,502},
                       {atom,eval_arg},
                       {f,503},
                       {atom,start_arg2},
                       {f,504},
                       {atom,start_arg},
                       {f,505},
                       {atom,start_extra_arg},
                       {f,506}]}}.
  {label,501}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,499},4}.
  {label,502}.
    {move,{y,0},{x,0}}.
    {move,{y,2},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1226}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,503}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1225}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,504}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1224}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,505}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1223}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,506}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {line,[{location,"init.erl",1222}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,507}.
    {test,is_nil,{f,498},[{x,0}]}.
    {allocate,0,2}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1231}]}.
    {call,1,{f,546}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,nil}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,508}.
    {line,[{location,"init.erl",1221}]}.
    {case_end,{x,0}}.


{function, get_flag, 3, 510}.
  {label,509}.
    {line,[{location,"init.erl",1239}]}.
    {func_info,{atom,init},{atom,get_flag},3}.
  {label,510}.
    {allocate,2,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{x,2}}.
    {move,{integer,1},{x,1}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",1240}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tuple,{f,513},[{x,0}]}.
    {test,test_arity,{f,513},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_nonempty_list,{f,511},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,512},[{x,4}]}.
    {test,is_eq_exact,{f,513},[{x,1},{y,1}]}.
    {move,{x,3},{x,0}}.
    {deallocate,2}.
    return.
  {label,511}.
    {test,is_nil,{f,512},[{x,2}]}.
    {test,is_eq_exact,{f,513},[{x,1},{y,1}]}.
    {move,{atom,true},{x,0}}.
    {deallocate,2}.
    return.
  {label,512}.
    {test,is_eq_exact,{f,513},[{x,1},{y,1}]}.
    {move,{x,2},{x,0}}.
    {deallocate,2}.
    return.
  {label,513}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.


{function, get_flag_list, 3, 515}.
  {label,514}.
    {line,[{location,"init.erl",1255}]}.
    {func_info,{atom,init},{atom,get_flag_list},3}.
  {label,515}.
    {allocate,2,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{x,2}}.
    {move,{integer,1},{x,1}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",1256}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tuple,{f,516},[{x,0}]}.
    {test,test_arity,{f,516},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_nonempty_list,{f,516},[{x,2}]}.
    {test,is_eq_exact,{f,516},[{x,1},{y,1}]}.
    {move,{x,2},{x,0}}.
    {deallocate,2}.
    return.
  {label,516}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.


{function, get_flag_args, 2, 518}.
  {label,517}.
    {line,[{location,"init.erl",1268}]}.
    {func_info,{atom,init},{atom,get_flag_args},2}.
  {label,518}.
    {move,nil,{x,2}}.
    {call_only,3,{f,520}}.


{function, get_flag_args, 3, 520}.
  {label,519}.
    {line,[{location,"init.erl",1270}]}.
    {func_info,{atom,init},{atom,get_flag_args},3}.
  {label,520}.
    {test,is_nonempty_list,{f,522},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_tuple,{f,521},[{x,3}]}.
    {test,test_arity,{f,521},[{x,3},2]}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {test,is_eq_exact,{f,521},[{x,5},{x,0}]}.
    {test_heap,2,5}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {put_list,{x,6},{x,2},{x,2}}.
    {move,{x,4},{x,1}}.
    {call_only,3,{f,520}}.
  {label,521}.
    {move,{x,4},{x,1}}.
    {call_only,3,{f,520}}.
  {label,522}.
    {test,is_nil,{f,519},[{x,1}]}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,546}}.


{function, get_arguments, 1, 524}.
  {label,523}.
    {line,[{location,"init.erl",1277}]}.
    {func_info,{atom,init},{atom,get_arguments},1}.
  {label,524}.
    {test,is_nonempty_list,{f,525},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,523},[{x,1}]}.
    {test,test_arity,{f,523},[{x,1},2]}.
    {allocate,2,3}.
    {get_tuple_element,{x,1},0,{y,1}}.
    {get_tuple_element,{x,1},1,{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"init.erl",1278}]}.
    {call,1,{f,527}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1278}]}.
    {call,1,{f,524}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,525}.
    {test,is_nil,{f,523},[{x,0}]}.
    return.


{function, to_strings, 1, 527}.
  {label,526}.
    {line,[{location,"init.erl",1282}]}.
    {func_info,{atom,init},{atom,to_strings},1}.
  {label,527}.
    {test,is_nonempty_list,{f,529},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_atom,{f,528},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1282}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1282}]}.
    {call,1,{f,527}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,528}.
    {test,is_binary,{f,526},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"init.erl",1283}]}.
    {call,1,{f,74}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1283}]}.
    {call,1,{f,527}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,529}.
    {test,is_nil,{f,526},[{x,0}]}.
    return.


{function, get_argument, 2, 531}.
  {label,530}.
    {line,[{location,"init.erl",1286}]}.
    {func_info,{atom,init},{atom,get_argument},2}.
  {label,531}.
    {allocate,0,2}.
    {line,[{location,"init.erl",1287}]}.
    {call,2,{f,534}}.
    {test,is_nil,{f,532},[{x,0}]}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,532}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.


{function, get_argument1, 2, 534}.
  {label,533}.
    {line,[{location,"init.erl",1292}]}.
    {func_info,{atom,init},{atom,get_argument1},2}.
  {label,534}.
    {test,is_nonempty_list,{f,536},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_tuple,{f,535},[{x,2}]}.
    {test,test_arity,{f,535},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_eq_exact,{f,535},[{x,4},{x,0}]}.
    {allocate,2,4}.
    {move,{x,0},{y,0}}.
    {move,{x,3},{y,1}}.
    {get_tuple_element,{x,2},1,{x,0}}.
    {line,[{location,"init.erl",1293}]}.
    {call,1,{f,527}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,2},{y,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",1293}]}.
    {call,2,{f,534}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,535}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,534}}.
  {label,536}.
    {test,is_nil,{f,533},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, set_argument, 3, 538}.
  {label,537}.
    {line,[{location,"init.erl",1299}]}.
    {func_info,{atom,init},{atom,set_argument},3}.
  {label,538}.
    {test,is_nonempty_list,{f,540},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_tuple,{f,539},[{x,3}]}.
    {test,test_arity,{f,539},[{x,3},2]}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {test,is_eq_exact,{f,539},[{x,1},{x,5}]}.
    {test_heap,7,6}.
    {put_list,{x,2},nil,{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{x,5}}.
    {put,{x,1}}.
    {put_list,{x,2},{x,4},{x,0}}.
    return.
  {label,539}.
    {allocate,1,5}.
    {move,{x,3},{y,0}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",1302}]}.
    {call,3,{f,538}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,540}.
    {test,is_nil,{f,537},[{x,0}]}.
    {test_heap,7,3}.
    {put_list,{x,2},nil,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,0}}.
    return.


{function, append, 1, 542}.
  {label,541}.
    {line,[{location,"init.erl",1306}]}.
    {func_info,{atom,init},{atom,append},1}.
  {label,542}.
    {test,is_nonempty_list,{f,544},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nil,{f,543},[{x,2}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,543}.
    {allocate,1,3}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",1308}]}.
    {call,1,{f,542}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"init.erl",1308}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,544}.
    {test,is_nil,{f,541},[{x,0}]}.
    return.


{function, reverse, 1, 546}.
  {label,545}.
    {line,[{location,"init.erl",1311}]}.
    {func_info,{atom,init},{atom,reverse},1}.
  {label,546}.
    {test,is_nonempty_list,{f,549},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,548},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,547},[{x,4}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,547}.
    {test_heap,4,5}.
    {put_list,{x,1},nil,{x,2}}.
    {put_list,{x,3},{x,2},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",1318}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,548}.
    {test,is_nil,{f,545},[{x,2}]}.
    return.
  {label,549}.
    {test,is_nil,{f,545},[{x,0}]}.
    return.


{function, objfile_extension, 0, 551}.
  {label,550}.
    {line,[{location,"init.erl",1321}]}.
    {func_info,{atom,init},{atom,objfile_extension},0}.
  {label,551}.
    {move,{literal,".beam"},{x,0}}.
    return.


{function, archive_extension, 0, 553}.
  {label,552}.
    {line,[{location,"init.erl",1330}]}.
    {func_info,{atom,init},{atom,archive_extension},0}.
  {label,553}.
    {move,{literal,".ez"},{x,0}}.
    return.


{function, run_on_load_handlers, 0, 555}.
  {label,554}.
    {line,[{location,"init.erl",1337}]}.
    {func_info,{atom,init},{atom,run_on_load_handlers},0}.
  {label,555}.
    {allocate_zero,2,0}.
    {move,{atom,init__boot__on_load_handler},{x,1}}.
    {move,{atom,process},{x,0}}.
    {line,[{location,"init.erl",1338}]}.
    {recv_mark,{f,557}}.
    {call_ext,2,{extfunc,erlang,monitor,2}}.
    {move,{x,0},{y,0}}.
    {move,{atom,run_on_load},{x,1}}.
    {move,{atom,init__boot__on_load_handler},{x,0}}.
    {'try',{y,1},{f,556}}.
    {line,[{location,"init.erl",1339}]}.
    send.
  {label,556}.
    {try_end,{y,1}}.
    {line,[{location,"init.erl",1340}]}.
    {recv_set,{f,557}}.
  {label,557}.
    {loop_rec,{f,561},{x,0}}.
    {test,is_tagged_tuple,{f,560},[{x,0},5,{atom,'DOWN'}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,560},[{x,3},{atom,process}]}.
    {get_tuple_element,{x,0},4,{x,4}}.
    {test,is_atom,{f,559},[{x,4}]}.
    {select_val,{x,4},
                {f,559},
                {list,[{atom,on_load_done},{f,558},{atom,noproc},{f,558}]}}.
  {label,558}.
    {test,is_eq_exact,{f,560},[{x,2},{y,0}]}.
    remove_message.
    {move,{atom,ok},{x,0}}.
    {deallocate,2}.
    return.
  {label,559}.
    {test,is_eq_exact,{f,560},[{x,2},{y,0}]}.
    remove_message.
    {move,{x,4},{x,0}}.
    {line,[{location,"init.erl",1352}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,560}.
    {loop_rec_end,{f,557}}.
  {label,561}.
    {wait,{f,557}}.


{function, start_on_load_handler_process, 0, 563}.
  {label,562}.
    {line,[{location,"init.erl",1355}]}.
    {func_info,{atom,init},{atom,start_on_load_handler_process},0}.
  {label,563}.
    {allocate,0,0}.
    {make_fun2,{f,626},0,0,0}.
    {line,[{location,"init.erl",1357}]}.
    {call_ext,1,{extfunc,erlang,spawn,1}}.
    {move,{x,0},{x,1}}.
    {move,{atom,init__boot__on_load_handler},{x,0}}.
    {line,[{location,"init.erl",1356}]}.
    {call_ext_last,2,{extfunc,erlang,register,2},0}.


{function, on_load_handler_init, 0, 565}.
  {label,564}.
    {line,[{location,"init.erl",1359}]}.
    {func_info,{atom,init},{atom,on_load_handler_init},0}.
  {label,565}.
    {move,{atom,false},{x,1}}.
    {move,nil,{x,0}}.
    {call_only,2,{f,567}}.


{function, on_load_loop, 2, 567}.
  {label,566}.
    {line,[{location,"init.erl",1362}]}.
    {func_info,{atom,init},{atom,on_load_loop},2}.
  {label,567}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",1363}]}.
  {label,568}.
    {loop_rec,{f,573},{x,0}}.
    {test,is_tuple,{f,571},[{x,0}]}.
    {test,test_arity,{f,572},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,572},[{x,1}]}.
    {select_val,{x,1},
                {f,572},
                {list,[{atom,loaded},{f,569},{atom,init_debug_flag},{f,570}]}}.
  {label,569}.
    {test_heap,2,3}.
    remove_message.
    {put_list,{x,2},{y,1},{x,0}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,567},2}.
  {label,570}.
    remove_message.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,567},2}.
  {label,571}.
    {test,is_eq_exact,{f,572},[{x,0},{atom,run_on_load}]}.
    remove_message.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {line,[{location,"init.erl",1369}]}.
    {call,2,{f,575}}.
    {move,{atom,on_load_done},{x,0}}.
    {line,[{location,"init.erl",1370}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,572}.
    {loop_rec_end,{f,568}}.
  {label,573}.
    {wait,{f,568}}.


{function, run_on_load_handlers, 2, 575}.
  {label,574}.
    {line,[{location,"init.erl",1373}]}.
    {func_info,{atom,init},{atom,run_on_load_handlers},2}.
  {label,575}.
    {test,is_nonempty_list,{f,580},[{x,0}]}.
    {allocate_heap,5,3,2}.
    {init,{y,0}}.
    {init,{y,1}}.
    {get_list,{x,0},{y,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,running_on_load_handler}}.
    {put,{y,2}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"init.erl",1374}]}.
    {call,2,{f,2}}.
    {move,{y,2},{x,0}}.
    {make_fun2,{f,624},0,0,1}.
    {line,[{location,"init.erl",1379}]}.
    {recv_mark,{f,576}}.
    {call_ext,1,{extfunc,erlang,spawn_monitor,1}}.
    {test,is_tuple,{f,581},[{x,0}]}.
    {test,test_arity,{f,581},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{y,1}}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {line,[{location,"init.erl",1380}]}.
    {recv_set,{f,576}}.
  {label,576}.
    {loop_rec,{f,579},{x,0}}.
    {test,is_tagged_tuple,{f,578},[{x,0},5,{atom,'DOWN'}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,578},[{x,3},{atom,process}]}.
    {test,is_eq_exact,{f,578},[{x,2},{y,0}]}.
    {get_tuple_element,{x,0},3,{x,4}}.
    {test,is_eq_exact,{f,578},[{x,4},{y,1}]}.
    {get_tuple_element,{x,0},4,{x,5}}.
    remove_message.
    {bif,'=:=',{f,0},[{x,5},{atom,ok}],{x,1}}.
    {move,{x,1},{y,1}}.
    {kill,{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"init.erl",1383}]}.
    {call_ext,2,{extfunc,erlang,finish_after_on_load,2}}.
    {test,is_eq_exact,{f,577},[{y,1},{atom,true}]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,on_load_handler_returned_ok}}.
    {put,{y,2}}.
    {trim,3,2}.
    {move,{y,1},{x,0}}.
    {line,[{location,"init.erl",1390}]}.
    {call,2,{f,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,575},2}.
  {label,577}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,on_load_function_failed}}.
    {put,{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{y,4},{x,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {kill,{y,4}}.
    {line,[{location,"init.erl",1387}]}.
    {call,2,{f,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"init.erl",1388}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.
  {label,578}.
    {loop_rec_end,{f,576}}.
  {label,579}.
    {wait,{f,576}}.
  {label,580}.
    {test,is_nil,{f,574},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,581}.
    {line,[{location,"init.erl",1379}]}.
    {badmatch,{x,0}}.


{function, debug_profile_start, 0, 583}.
  {label,582}.
    {line,[{location,"init.erl",1398}]}.
    {func_info,{atom,init},{atom,debug_profile_start},0}.
  {label,583}.
    {allocate,0,0}.
    {move,{atom,true},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{literal,{'_','_','_'}},{x,0}}.
    {line,[{location,"init.erl",1399}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {move,{atom,true},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{atom,on_load},{x,0}}.
    {line,[{location,"init.erl",1400}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {move,{atom,true},{x,1}}.
    {move,{literal,[call]},{x,2}}.
    {move,{atom,all},{x,0}}.
    {line,[{location,"init.erl",1401}]}.
    {call_ext,3,{extfunc,erlang,trace,3}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, debug_profile_stop, 0, 585}.
  {label,584}.
    {line,[{location,"init.erl",1404}]}.
    {func_info,{atom,init},{atom,debug_profile_stop},0}.
  {label,585}.
    {allocate,0,0}.
    {move,{atom,false},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{literal,{'_','_','_'}},{x,0}}.
    {line,[{location,"init.erl",1405}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {move,{atom,false},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{atom,on_load},{x,0}}.
    {line,[{location,"init.erl",1406}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {move,{atom,false},{x,1}}.
    {move,{literal,[call]},{x,2}}.
    {move,{atom,all},{x,0}}.
    {line,[{location,"init.erl",1407}]}.
    {call_ext,3,{extfunc,erlang,trace,3}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, debug_profile_mfas, 0, 587}.
  {label,586}.
    {line,[{location,"init.erl",1410}]}.
    {func_info,{atom,init},{atom,debug_profile_mfas},0}.
  {label,587}.
    {allocate_zero,1,0}.
    {move,{atom,pause},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{literal,{'_','_','_'}},{x,0}}.
    {line,[{location,"init.erl",1411}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {move,{atom,pause},{x,1}}.
    {move,{literal,[call_time]},{x,2}}.
    {move,{atom,on_load},{x,0}}.
    {line,[{location,"init.erl",1412}]}.
    {call_ext,3,{extfunc,erlang,trace_pattern,3}}.
    {line,[{location,"init.erl",1413}]}.
    {call,0,{f,591}}.
    {move,{x,0},{y,0}}.
    {move,{atom,snifs},{x,0}}.
    {line,[{location,"init.erl",1413}]}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"init.erl",1413}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,596},0}.


{function, debug_profile_format_mfas, 1, 589}.
  {label,588}.
    {line,[{location,"init.erl",1418}]}.
    {func_info,{atom,init},{atom,debug_profile_format_mfas},1}.
  {label,589}.
    {allocate_zero,1,1}.
    {line,[{location,"init.erl",1419}]}.
    {call_ext,1,{extfunc,lists,sort,1}}.
    {move,{x,0},{y,0}}.
    {make_fun2,{f,622},0,0,0}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"init.erl",1420}]}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, collect_loaded_mfas, 0, 591}.
  {label,590}.
    {line,[{location,"init.erl",1426}]}.
    {func_info,{atom,init},{atom,collect_loaded_mfas},0}.
  {label,591}.
    {allocate,0,0}.
    {line,[{location,"init.erl",1427}]}.
    {call_ext,0,{extfunc,code,all_loaded,0}}.
    {line,[{location,"init.erl",1427}]}.
    {call,1,{f,616}}.
    {line,[{location,"init.erl",1427}]}.
    {call,1,{f,619}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,593},0}.


{function, collect_loaded_mfas, 2, 593}.
  {label,592}.
    {line,[{location,"init.erl",1430}]}.
    {func_info,{atom,init},{atom,collect_loaded_mfas},2}.
  {label,593}.
    {test,is_nonempty_list,{f,594},[{x,0}]}.
    {allocate,3,2}.
    {get_list,{x,0},{x,2},{y,2}}.
    {move,{x,1},{y,1}}.
    {move,{x,2},{x,1}}.
    {move,{atom,module_info},{x,2}}.
    {move,{x,1},{y,0}}.
    {move,{atom,functions},{x,0}}.
    {line,[{location,"init.erl",1432}]}.
    {apply,1}.
    {move,{y,0},{x,1}}.
    {trim,1,2}.
    {line,[{location,"init.erl",1432}]}.
    {call,2,{f,611}}.
    {move,{y,0},{x,1}}.
    {trim,1,1}.
    {line,[{location,"init.erl",1433}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,593},1}.
  {label,594}.
    {test,is_nil,{f,592},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, collect_mfas, 2, 596}.
  {label,595}.
    {line,[{location,"init.erl",1436}]}.
    {func_info,{atom,init},{atom,collect_mfas},2}.
  {label,596}.
    {test,is_nonempty_list,{f,601},[{x,0}]}.
    {allocate,3,2}.
    {get_list,{x,0},{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{atom,call_time},{x,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"init.erl",1438}]}.
    {call_ext,2,{extfunc,erlang,trace_info,2}}.
    {test,is_tagged_tuple,{f,602},[{x,0},2,{atom,call_time}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,597},[{x,2}]}.
    {test,is_eq_exact,{f,598},[{x,2},{atom,false}]}.
    {jump,{f,599}}.
  {label,597}.
    {test,is_nil,{f,598},[{x,2}]}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,596},3}.
  {label,598}.
    {move,{x,2},{x,1}}.
    {move,{integer,0},{x,2}}.
    {move,{integer,0},{x,3}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {line,[{location,"init.erl",1444}]}.
    {call,4,{f,604}}.
    {test,is_tuple,{f,600},[{x,0}]}.
    {test,test_arity,{f,600},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_tuple,{f,600},[{x,1}]}.
    {test,test_arity,{f,600},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {test,is_eq_exact,{f,600},[{x,2},{integer,0}]}.
  {label,599}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,596},3}.
  {label,600}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,596},3}.
  {label,601}.
    {test,is_nil,{f,595},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,602}.
    {line,[{location,"init.erl",1438}]}.
    {case_end,{x,0}}.


{function, collect_mfa, 4, 604}.
  {label,603}.
    {line,[{location,"init.erl",1453}]}.
    {func_info,{atom,init},{atom,collect_mfa},4}.
  {label,604}.
    {test,is_nonempty_list,{f,605},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_tuple,{f,603},[{x,4}]}.
    {test,test_arity,{f,603},[{x,4},4]}.
    {get_tuple_element,{x,4},1,{x,6}}.
    {get_tuple_element,{x,4},2,{x,7}}.
    {get_tuple_element,{x,4},3,{x,8}}.
    {line,[{location,"init.erl",1455}]}.
    {gc_bif,'+',{f,0},9,[{x,2},{x,6}],{x,1}}.
    {line,[{location,"init.erl",1455}]}.
    {gc_bif,'*',{f,0},9,[{x,7},{integer,1000000}],{x,2}}.
    {line,[{location,"init.erl",1455}]}.
    {gc_bif,'+',{f,0},9,[{x,3},{x,2}],{x,2}}.
    {line,[{location,"init.erl",1455}]}.
    {gc_bif,'+',{f,0},9,[{x,2},{x,8}],{x,3}}.
    {move,{x,1},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,604}}.
  {label,605}.
    {test,is_nil,{f,603},[{x,1}]}.
    {test_heap,6,4}.
    {put_tuple,2,{x,1}}.
    {put,{x,3}}.
    {put,{x,2}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,0}}.
    return.


{function, module_info, 0, 607}.
  {label,606}.
    {line,[]}.
    {func_info,{atom,init},{atom,module_info},0}.
  {label,607}.
    {move,{atom,init},{x,0}}.
    {line,[]}.
    {call_ext_only,1,{extfunc,erlang,get_module_info,1}}.


{function, module_info, 1, 609}.
  {label,608}.
    {line,[]}.
    {func_info,{atom,init},{atom,module_info},1}.
  {label,609}.
    {move,{x,0},{x,1}}.
    {move,{atom,init},{x,0}}.
    {line,[]}.
    {call_ext_only,2,{extfunc,erlang,get_module_info,2}}.


{function, '-collect_loaded_mfas/2-lc$^0/1-0-', 2, 611}.
  {label,610}.
    {line,[{location,"init.erl",1432}]}.
    {func_info,{atom,init},{atom,'-collect_loaded_mfas/2-lc$^0/1-0-'},2}.
  {label,611}.
    {test,is_nonempty_list,{f,613},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,612},[{x,2}]}.
    {test,test_arity,{f,612},[{x,2},2]}.
    {allocate,3,4}.
    {get_tuple_element,{x,2},0,{y,2}}.
    {get_tuple_element,{x,2},1,{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"init.erl",1432}]}.
    {call,2,{f,611}}.
    {test_heap,6,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {put,{y,1}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,3}.
    return.
  {label,612}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,611}}.
  {label,613}.
    {test,is_nil,{f,614},[{x,0}]}.
    return.
  {label,614}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{atom,function_clause},{x,0}}.
    {line,[{location,"init.erl",1432}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, '-collect_loaded_mfas/0-lc$^0/1-1-', 1, 616}.
  {label,615}.
    {line,[{location,"init.erl",1427}]}.
    {func_info,{atom,init},{atom,'-collect_loaded_mfas/0-lc$^0/1-1-'},1}.
  {label,616}.
    {test,is_nonempty_list,{f,617},[{x,0}]}.
    {allocate_zero,1,1}.
    {get_list,{x,0},{x,1},{x,0}}.
    {line,[{location,"init.erl",1427}]}.
    {bif,element,{f,0},[{integer,1},{x,1}],{y,0}}.
    {line,[{location,"init.erl",1427}]}.
    {call,1,{f,616}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,617}.
    {test,is_nil,{f,615},[{x,0}]}.
    return.


{function, '-collect_loaded_mfas/0-lc$^1/1-0-', 1, 619}.
  {label,618}.
    {line,[{location,"init.erl",1427}]}.
    {func_info,{atom,init},{atom,'-collect_loaded_mfas/0-lc$^1/1-0-'},1}.
  {label,619}.
    {test,is_nonempty_list,{f,620},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{y,0},{x,0}}.
    {line,[{location,"init.erl",1427}]}.
    {call,1,{f,619}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,620}.
    {test,is_nil,{f,618},[{x,0}]}.
    return.


{function, '-debug_profile_format_mfas/1-fun-0-', 1, 622}.
  {label,621}.
    {line,[{location,"init.erl",1420}]}.
    {func_info,{atom,init},{atom,'-debug_profile_format_mfas/1-fun-0-'},1}.
  {label,622}.
    {test,is_tuple,{f,621},[{x,0}]}.
    {test,test_arity,{f,621},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_tuple,{f,621},[{x,1}]}.
    {test,test_arity,{f,621},[{x,1},2]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,621},[{x,2}]}.
    {test,test_arity,{f,621},[{x,2},3]}.
    {allocate_heap,2,6,3}.
    {get_tuple_element,{x,1},0,{y,0}}.
    {get_tuple_element,{x,1},1,{y,1}}.
    {get_tuple_element,{x,2},0,{x,5}}.
    {get_tuple_element,{x,2},1,{x,6}}.
    {get_tuple_element,{x,2},2,{x,7}}.
    {put_list,{x,7},nil,{x,2}}.
    {put_list,{x,6},{x,2},{x,2}}.
    {put_list,{x,5},{x,2},{x,1}}.
    {move,{literal,"~w:~w/~w"},{x,0}}.
    {line,[{location,"init.erl",1421}]}.
    {call_ext,2,{extfunc,io_lib,format,2}}.
    {test_heap,6,1}.
    {put_list,{y,0},nil,{x,3}}.
    {put_list,{y,1},{x,3},{x,3}}.
    {put_list,{x,0},{x,3},{x,2}}.
    {move,{literal,"~55s - ~6w : ~w us~n"},{x,1}}.
    {move,{atom,standard_error},{x,0}}.
    {line,[{location,"init.erl",1422}]}.
    {call_ext_last,3,{extfunc,io,format,3},2}.


{function, '-run_on_load_handlers/2-fun-0-', 1, 624}.
  {label,623}.
    {line,[{location,"init.erl",1375}]}.
    {func_info,{atom,init},{atom,'-run_on_load_handlers/2-fun-0-'},1}.
  {label,624}.
    {allocate,0,1}.
    {line,[{location,"init.erl",1376}]}.
    {call_ext,1,{extfunc,erlang,call_on_load_function,1}}.
    {line,[{location,"init.erl",1377}]}.
    {call_ext,1,{extfunc,erlang,exit,1}}.


{function, '-start_on_load_handler_process/0-fun-0-', 0, 626}.
  {label,625}.
    {line,[{location,"init.erl",1357}]}.
    {func_info,{atom,init},{atom,'-start_on_load_handler_process/0-fun-0-'},0}.
  {label,626}.
    {call_only,0,{f,565}}.


{function, '-shutdown_timer/1-fun-0-', 1, 628}.
  {label,627}.
    {line,[{location,"init.erl",1156}]}.
    {func_info,{atom,init},{atom,'-shutdown_timer/1-fun-0-'},1}.
  {label,628}.
    {call_only,1,{f,468}}.


{function, '-patch_dir/2-lc$^1/1-0-', 1, 630}.
  {label,629}.
    {line,[{location,"init.erl",1028}]}.
    {func_info,{atom,init},{atom,'-patch_dir/2-lc$^1/1-0-'},1}.
  {label,630}.
    {test,is_nonempty_list,{f,631},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {line,[{location,"init.erl",1028}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1028}]}.
    {call,1,{f,630}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,631}.
    {test,is_nil,{f,629},[{x,0}]}.
    return.


{function, '-patch_dir/2-lc$^0/1-1-', 1, 633}.
  {label,632}.
    {line,[{location,"init.erl",1023}]}.
    {func_info,{atom,init},{atom,'-patch_dir/2-lc$^0/1-1-'},1}.
  {label,633}.
    {test,is_nonempty_list,{f,634},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {line,[{location,"init.erl",1023}]}.
    {call,1,{f,546}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"init.erl",1023}]}.
    {call,1,{f,633}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,634}.
    {test,is_nil,{f,632},[{x,0}]}.
    return.


{function, '-patch_path/2-lc$^0/1-0-', 2, 636}.
  {label,635}.
    {line,[{location,"init.erl",1014}]}.
    {func_info,{atom,init},{atom,'-patch_path/2-lc$^0/1-0-'},2}.
  {label,636}.
    {test,is_nonempty_list,{f,637},[{x,0}]}.
    {allocate,2,2}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",1014}]}.
    {call,2,{f,406}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,2},{y,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",1014}]}.
    {call,2,{f,636}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,637}.
    {test,is_nil,{f,638},[{x,0}]}.
    return.
  {label,638}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{atom,function_clause},{x,0}}.
    {line,[{location,"init.erl",1014}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, '-prepare_loading_fun/0-fun-0-', 3, 640}.
  {label,639}.
    {line,[{location,"init.erl",963}]}.
    {func_info,{atom,init},{atom,'-prepare_loading_fun/0-fun-0-'},3}.
  {label,640}.
    {allocate,3,3}.
    {init,{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,2},{x,1}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"init.erl",964}]}.
    {call_ext,2,{extfunc,erlang,prepare_loading,2}}.
    {test,is_tagged_tuple,{f,641},[{x,0},2,{atom,error}]}.
    {deallocate,3}.
    return.
  {label,641}.
    {move,{x,0},{y,0}}.
    {line,[{location,"init.erl",968}]}.
    {call_ext,1,{extfunc,erlang,has_prepared_code_on_load,1}}.
    {test,is_atom,{f,644},[{x,0}]}.
    {select_val,{x,0},
                {f,644},
                {list,[{atom,false},{f,642},{atom,true},{f,643}]}}.
  {label,642}.
    {test_heap,7,0}.
    {put_tuple,3,{x,1}}.
    {put,{atom,prepared}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,1}}.
    {deallocate,3}.
    return.
  {label,643}.
    {test_heap,7,0}.
    {put_tuple,3,{x,1}}.
    {put,{atom,on_load}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,1}}.
    {deallocate,3}.
    return.
  {label,644}.
    {line,[{location,"init.erl",968}]}.
    {case_end,{x,0}}.


{function, '-load_modules/2-lc$^4/1-1-', 1, 646}.
  {label,645}.
    {line,[{location,"init.erl",951}]}.
    {func_info,{atom,init},{atom,'-load_modules/2-lc$^4/1-1-'},1}.
  {label,646}.
    {test,is_nonempty_list,{f,648},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,647},[{x,1}]}.
    {test,test_arity,{f,647},[{x,1},2]}.
    {allocate,1,3}.
    {get_tuple_element,{x,1},0,{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",951}]}.
    {call,1,{f,646}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,647}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,646}}.
  {label,648}.
    {test,is_nil,{f,645},[{x,0}]}.
    return.


{function, '-load_modules/2-lc$^3/1-4-', 1, 650}.
  {label,649}.
    {line,[{location,"init.erl",948}]}.
    {func_info,{atom,init},{atom,'-load_modules/2-lc$^3/1-4-'},1}.
  {label,650}.
    {test,is_nonempty_list,{f,652},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,651},[{x,1}]}.
    {test,test_arity,{f,651},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_tagged_tuple,{f,651},[{x,4},3,{atom,on_load}]}.
    {allocate,3,5}.
    {get_tuple_element,{x,4},1,{y,2}}.
    {get_tuple_element,{x,4},2,{y,1}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",948}]}.
    {call,1,{f,650}}.
    {test_heap,6,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {put,{y,1}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,3}.
    return.
  {label,651}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,650}}.
  {label,652}.
    {test,is_nil,{f,649},[{x,0}]}.
    return.


{function, '-load_modules/2-lc$^2/1-3-', 1, 654}.
  {label,653}.
    {line,[{location,"init.erl",946}]}.
    {func_info,{atom,init},{atom,'-load_modules/2-lc$^2/1-3-'},1}.
  {label,654}.
    {test,is_nonempty_list,{f,656},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,655},[{x,1}]}.
    {test,test_arity,{f,655},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_tuple,{f,655},[{x,4}]}.
    {test,test_arity,{f,655},[{x,4},3]}.
    {allocate,2,5}.
    {get_tuple_element,{x,4},2,{y,1}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",946}]}.
    {call,1,{f,654}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,655}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,654}}.
  {label,656}.
    {test,is_nil,{f,653},[{x,0}]}.
    return.


{function, '-load_modules/2-lc$^1/1-2-', 1, 658}.
  {label,657}.
    {line,[{location,"init.erl",944}]}.
    {func_info,{atom,init},{atom,'-load_modules/2-lc$^1/1-2-'},1}.
  {label,658}.
    {test,is_nonempty_list,{f,660},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,659},[{x,1}]}.
    {test,test_arity,{f,659},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_tagged_tuple,{f,659},[{x,3},3,{atom,prepared}]}.
    {allocate,1,4}.
    {get_tuple_element,{x,3},1,{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",944}]}.
    {call,1,{f,658}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,659}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,658}}.
  {label,660}.
    {test,is_nil,{f,657},[{x,0}]}.
    return.


{function, '-load_modules/2-lc$^0/1-0-', 1, 662}.
  {label,661}.
    {line,[{location,"init.erl",940}]}.
    {func_info,{atom,init},{atom,'-load_modules/2-lc$^0/1-0-'},1}.
  {label,662}.
    {test,is_nonempty_list,{f,665},[{x,0}]}.
    {allocate,2,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",940}]}.
    {call_ext,1,{extfunc,erlang,module_loaded,1}}.
    {test,is_atom,{f,666},[{x,0}]}.
    {select_val,{x,0},
                {f,666},
                {list,[{atom,true},{f,663},{atom,false},{f,664}]}}.
  {label,663}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,662},2}.
  {label,664}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",940}]}.
    {call,1,{f,662}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,665}.
    {test,is_nil,{f,661},[{x,0}]}.
    return.
  {label,666}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"init.erl",940}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, '-do_boot/2-fun-0-', 3, 668}.
  {label,667}.
    {line,[{location,"init.erl",788}]}.
    {func_info,{atom,init},{atom,'-do_boot/2-fun-0-'},3}.
  {label,668}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,324}}.


{function, '-get_pids/2-lc$^0/1-0-', 1, 670}.
  {label,669}.
    {line,[{location,"init.erl",668}]}.
    {func_info,{atom,init},{atom,'-get_pids/2-lc$^0/1-0-'},1}.
  {label,670}.
    {test,is_nonempty_list,{f,673},[{x,0}]}.
    {allocate,2,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"init.erl",668}]}.
    {call_ext,1,{extfunc,erts_internal,is_system_process,1}}.
    {test,is_atom,{f,674},[{x,0}]}.
    {select_val,{x,0},
                {f,674},
                {list,[{atom,true},{f,671},{atom,false},{f,672}]}}.
  {label,671}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,670},2}.
  {label,672}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"init.erl",668}]}.
    {call,1,{f,670}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,673}.
    {test,is_nil,{f,669},[{x,0}]}.
    return.
  {label,674}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"init.erl",668}]}.
    {call_ext,1,{extfunc,erlang,error,1}}.


{function, '-notify/1-fun-0-', 1, 676}.
  {label,675}.
    {line,[{location,"init.erl",397}]}.
    {func_info,{atom,init},{atom,'-notify/1-fun-0-'},1}.
  {label,676}.
    {allocate,0,1}.
    {move,{literal,{init,started}},{x,1}}.
    {line,[{location,"init.erl",397}]}.
    send.
    {deallocate,0}.
    return.


{function, '-to_string/2-lc$^0/1-0-', 2, 678}.
  {label,677}.
    {line,[{location,"init.erl",268}]}.
    {func_info,{atom,init},{atom,'-to_string/2-lc$^0/1-0-'},2}.
  {label,678}.
    {test,is_nonempty_list,{f,679},[{x,0}]}.
    {allocate_zero,2,2}.
    {get_list,{x,0},{x,2},{x,3}}.
    {line,[{location,"init.erl",268}]}.
    {gc_bif,'+',{f,0},4,[{x,1},{integer,1}],{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",268}]}.
    {call,2,{f,88}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"init.erl",268}]}.
    {call,2,{f,678}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,679}.
    {test,is_nil,{f,680},[{x,0}]}.
    return.
  {label,680}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{atom,function_clause},{x,0}}.
    {line,[{location,"init.erl",268}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, '-to_string/2-lc$^1/1-1-', 2, 682}.
  {label,681}.
    {line,[{location,"init.erl",282}]}.
    {func_info,{atom,init},{atom,'-to_string/2-lc$^1/1-1-'},2}.
  {label,682}.
    {test,is_nonempty_list,{f,683},[{x,0}]}.
    {allocate_zero,2,2}.
    {get_list,{x,0},{x,2},{x,3}}.
    {line,[{location,"init.erl",282}]}.
    {gc_bif,'+',{f,0},4,[{x,1},{integer,1}],{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"init.erl",282}]}.
    {call,2,{f,88}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"init.erl",282}]}.
    {call,2,{f,682}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,683}.
    {test,is_nil,{f,684},[{x,0}]}.
    return.
  {label,684}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{atom,function_clause},{x,0}}.
    {line,[{location,"init.erl",282}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, '-boot/1-fun-0-', 1, 686}.
  {label,685}.
    {line,[{location,"init.erl",209}]}.
    {func_info,{atom,init},{atom,'-boot/1-fun-0-'},1}.
  {label,686}.
    {call_only,1,{f,64}}.


{function, '-bs2ss/1-fun-0-', 1, 688}.
  {label,687}.
    {line,[{location,"init.erl",124}]}.
    {func_info,{atom,init},{atom,'-bs2ss/1-fun-0-'},1}.
  {label,688}.
    {call_only,1,{f,74}}.


{function, '-bs2as/1-fun-0-', 1, 690}.
  {label,689}.
    {line,[{location,"init.erl",119}]}.
    {func_info,{atom,init},{atom,'-bs2as/1-fun-0-'},1}.
  {label,690}.
    {call_only,1,{f,71}}.
